// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1/tempus/tempus.proto

package tempusv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Category represents a drumming category
type Category struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{0}
}

func (x *Category) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Category) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Category) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Tag represents a tag used for categorizing exercises
type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CategoryIds   []int32                `protobuf:"varint,4,rep,packed,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"` // Related category IDs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{1}
}

func (x *Tag) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Tag) GetCategoryIds() []int32 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

// Exercise represents a drumming exercise
type Exercise struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TagIds        []int32                `protobuf:"varint,6,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`                // Related tag IDs
	CategoryIds   []int32                `protobuf:"varint,7,rep,packed,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"` // Related category IDs
	Images        []*ExerciseImage       `protobuf:"bytes,8,rep,name=images,proto3" json:"images,omitempty"`
	Links         []*ExerciseLink        `protobuf:"bytes,9,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exercise) Reset() {
	*x = Exercise{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exercise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exercise) ProtoMessage() {}

func (x *Exercise) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exercise.ProtoReflect.Descriptor instead.
func (*Exercise) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{2}
}

func (x *Exercise) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Exercise) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Exercise) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Exercise) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Exercise) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Exercise) GetTagIds() []int32 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *Exercise) GetCategoryIds() []int32 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *Exercise) GetImages() []*ExerciseImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Exercise) GetLinks() []*ExerciseLink {
	if x != nil {
		return x.Links
	}
	return nil
}

// ExerciseImage represents an image associated with an exercise
type ExerciseImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExerciseId    int32                  `protobuf:"varint,2,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	ImageData     []byte                 `protobuf:"bytes,3,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	MimeType      string                 `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExerciseImage) Reset() {
	*x = ExerciseImage{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseImage) ProtoMessage() {}

func (x *ExerciseImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseImage.ProtoReflect.Descriptor instead.
func (*ExerciseImage) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{3}
}

func (x *ExerciseImage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExerciseImage) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *ExerciseImage) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *ExerciseImage) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ExerciseImage) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ExerciseImage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExerciseImage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// ExerciseLink represents an external link for an exercise
type ExerciseLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExerciseId    int32                  `protobuf:"varint,2,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExerciseLink) Reset() {
	*x = ExerciseLink{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseLink) ProtoMessage() {}

func (x *ExerciseLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseLink.ProtoReflect.Descriptor instead.
func (*ExerciseLink) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{4}
}

func (x *ExerciseLink) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExerciseLink) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *ExerciseLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ExerciseLink) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExerciseLink) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// PracticeSession represents a drumming practice session
type PracticeSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Notes         string                 `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Exercises     []*ExerciseHistory     `protobuf:"bytes,7,rep,name=exercises,proto3" json:"exercises,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PracticeSession) Reset() {
	*x = PracticeSession{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PracticeSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PracticeSession) ProtoMessage() {}

func (x *PracticeSession) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PracticeSession.ProtoReflect.Descriptor instead.
func (*PracticeSession) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{5}
}

func (x *PracticeSession) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PracticeSession) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *PracticeSession) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *PracticeSession) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *PracticeSession) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PracticeSession) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PracticeSession) GetExercises() []*ExerciseHistory {
	if x != nil {
		return x.Exercises
	}
	return nil
}

// ExerciseHistory represents a historical record of exercise performance
type ExerciseHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExerciseId    int32                  `protobuf:"varint,2,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Bpms          []int32                `protobuf:"varint,5,rep,packed,name=bpms,proto3" json:"bpms,omitempty"`
	TimeSignature string                 `protobuf:"bytes,6,opt,name=time_signature,json=timeSignature,proto3" json:"time_signature,omitempty"`
	Notes         string                 `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	Rating        int32                  `protobuf:"varint,8,opt,name=rating,proto3" json:"rating,omitempty"`    // User rating (1-5)
	Exercise      *Exercise              `protobuf:"bytes,9,opt,name=exercise,proto3" json:"exercise,omitempty"` // Full exercise details
	SessionId     int32                  `protobuf:"varint,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExerciseHistory) Reset() {
	*x = ExerciseHistory{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseHistory) ProtoMessage() {}

func (x *ExerciseHistory) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseHistory.ProtoReflect.Descriptor instead.
func (*ExerciseHistory) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{6}
}

func (x *ExerciseHistory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExerciseHistory) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *ExerciseHistory) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ExerciseHistory) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ExerciseHistory) GetBpms() []int32 {
	if x != nil {
		return x.Bpms
	}
	return nil
}

func (x *ExerciseHistory) GetTimeSignature() string {
	if x != nil {
		return x.TimeSignature
	}
	return ""
}

func (x *ExerciseHistory) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *ExerciseHistory) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ExerciseHistory) GetExercise() *Exercise {
	if x != nil {
		return x.Exercise
	}
	return nil
}

func (x *ExerciseHistory) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// CreateCategoryRequest is used to create a new category
type CreateCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCategoryRequest) Reset() {
	*x = CreateCategoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryRequest) ProtoMessage() {}

func (x *CreateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCategoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// GetCategoryRequest is used to retrieve a specific category
type GetCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryRequest) Reset() {
	*x = GetCategoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryRequest) ProtoMessage() {}

func (x *GetCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{8}
}

func (x *GetCategoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ListCategoriesRequest is used to list categories with pagination
type ListCategoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoriesRequest) Reset() {
	*x = ListCategoriesRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoriesRequest) ProtoMessage() {}

func (x *ListCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoriesRequest.ProtoReflect.Descriptor instead.
func (*ListCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{9}
}

func (x *ListCategoriesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCategoriesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListCategoriesResponse contains a list of categories and pagination info
type ListCategoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []*Category            `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoriesResponse) Reset() {
	*x = ListCategoriesResponse{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoriesResponse) ProtoMessage() {}

func (x *ListCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoriesResponse.ProtoReflect.Descriptor instead.
func (*ListCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{10}
}

func (x *ListCategoriesResponse) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ListCategoriesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListCategoriesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// UpdateCategoryRequest is used to update a category
type UpdateCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Category      *Category              `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCategoryRequest) Reset() {
	*x = UpdateCategoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryRequest) ProtoMessage() {}

func (x *UpdateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCategoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCategoryRequest) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *UpdateCategoryRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// DeleteCategoryRequest is used to delete a category
type DeleteCategoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCategoryRequest) Reset() {
	*x = DeleteCategoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryRequest) ProtoMessage() {}

func (x *DeleteCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteCategoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// CreateTagRequest is used to create a new tag
type CreateTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CategoryIds   []int32                `protobuf:"varint,2,rep,packed,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"` // Related category IDs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTagRequest) GetCategoryIds() []int32 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

// GetTagRequest is used to retrieve a specific tag
type GetTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTagRequest) Reset() {
	*x = GetTagRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagRequest) ProtoMessage() {}

func (x *GetTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagRequest.ProtoReflect.Descriptor instead.
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{14}
}

func (x *GetTagRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ListTagsRequest is used to list tags with pagination
type ListTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	CategoryId    int32                  `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // Optional: filter by category
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsRequest) Reset() {
	*x = ListTagsRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsRequest) ProtoMessage() {}

func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsRequest.ProtoReflect.Descriptor instead.
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{15}
}

func (x *ListTagsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTagsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListTagsRequest) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

// ListTagsResponse contains a list of tags and pagination info
type ListTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*Tag                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsResponse) Reset() {
	*x = ListTagsResponse{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsResponse) ProtoMessage() {}

func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsResponse.ProtoReflect.Descriptor instead.
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{16}
}

func (x *ListTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListTagsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListTagsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// UpdateTagRequest is used to update a tag
type UpdateTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag           *Tag                   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTagRequest) Reset() {
	*x = UpdateTagRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagRequest) ProtoMessage() {}

func (x *UpdateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagRequest.ProtoReflect.Descriptor instead.
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateTagRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTagRequest) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *UpdateTagRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// DeleteTagRequest is used to delete a tag
type DeleteTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteTagRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// CreateExerciseRequest is used to create a new exercise
type CreateExerciseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	TagIds        []int32                `protobuf:"varint,3,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	CategoryIds   []int32                `protobuf:"varint,4,rep,packed,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`
	Images        []*ExerciseImage       `protobuf:"bytes,5,rep,name=images,proto3" json:"images,omitempty"`
	Links         []*ExerciseLink        `protobuf:"bytes,6,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExerciseRequest) Reset() {
	*x = CreateExerciseRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExerciseRequest) ProtoMessage() {}

func (x *CreateExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExerciseRequest.ProtoReflect.Descriptor instead.
func (*CreateExerciseRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{19}
}

func (x *CreateExerciseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateExerciseRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateExerciseRequest) GetTagIds() []int32 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *CreateExerciseRequest) GetCategoryIds() []int32 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *CreateExerciseRequest) GetImages() []*ExerciseImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *CreateExerciseRequest) GetLinks() []*ExerciseLink {
	if x != nil {
		return x.Links
	}
	return nil
}

// GetExerciseRequest is used to retrieve a specific exercise
type GetExerciseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExerciseRequest) Reset() {
	*x = GetExerciseRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseRequest) ProtoMessage() {}

func (x *GetExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseRequest.ProtoReflect.Descriptor instead.
func (*GetExerciseRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{20}
}

func (x *GetExerciseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ListExercisesRequest is used to list exercises with pagination and filters
type ListExercisesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	CategoryId    int32                  `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // Optional: filter by category
	TagId         int32                  `protobuf:"varint,4,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`                // Optional: filter by tag
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExercisesRequest) Reset() {
	*x = ListExercisesRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExercisesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExercisesRequest) ProtoMessage() {}

func (x *ListExercisesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExercisesRequest.ProtoReflect.Descriptor instead.
func (*ListExercisesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{21}
}

func (x *ListExercisesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListExercisesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListExercisesRequest) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ListExercisesRequest) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

// ListExercisesResponse contains a list of exercises and pagination info
type ListExercisesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exercises     []*Exercise            `protobuf:"bytes,1,rep,name=exercises,proto3" json:"exercises,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExercisesResponse) Reset() {
	*x = ListExercisesResponse{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExercisesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExercisesResponse) ProtoMessage() {}

func (x *ListExercisesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExercisesResponse.ProtoReflect.Descriptor instead.
func (*ListExercisesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{22}
}

func (x *ListExercisesResponse) GetExercises() []*Exercise {
	if x != nil {
		return x.Exercises
	}
	return nil
}

func (x *ListExercisesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListExercisesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// UpdateExerciseRequest is used to update an exercise
type UpdateExerciseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Exercise      *Exercise              `protobuf:"bytes,2,opt,name=exercise,proto3" json:"exercise,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExerciseRequest) Reset() {
	*x = UpdateExerciseRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseRequest) ProtoMessage() {}

func (x *UpdateExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseRequest.ProtoReflect.Descriptor instead.
func (*UpdateExerciseRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateExerciseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateExerciseRequest) GetExercise() *Exercise {
	if x != nil {
		return x.Exercise
	}
	return nil
}

func (x *UpdateExerciseRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// DeleteExerciseRequest is used to delete an exercise
type DeleteExerciseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExerciseRequest) Reset() {
	*x = DeleteExerciseRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExerciseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExerciseRequest) ProtoMessage() {}

func (x *DeleteExerciseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExerciseRequest.ProtoReflect.Descriptor instead.
func (*DeleteExerciseRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteExerciseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// AddExerciseImageRequest is used to add an image to an exercise
type AddExerciseImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    int32                  `protobuf:"varint,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	ImageData     []byte                 `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"`
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	MimeType      string                 `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddExerciseImageRequest) Reset() {
	*x = AddExerciseImageRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddExerciseImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExerciseImageRequest) ProtoMessage() {}

func (x *AddExerciseImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExerciseImageRequest.ProtoReflect.Descriptor instead.
func (*AddExerciseImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{25}
}

func (x *AddExerciseImageRequest) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *AddExerciseImageRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *AddExerciseImageRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *AddExerciseImageRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *AddExerciseImageRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// DeleteExerciseImageRequest is used to delete an image from an exercise
type DeleteExerciseImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExerciseImageRequest) Reset() {
	*x = DeleteExerciseImageRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExerciseImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExerciseImageRequest) ProtoMessage() {}

func (x *DeleteExerciseImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExerciseImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteExerciseImageRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteExerciseImageRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// AddExerciseLinkRequest is used to add a link to an exercise
type AddExerciseLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    int32                  `protobuf:"varint,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddExerciseLinkRequest) Reset() {
	*x = AddExerciseLinkRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddExerciseLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExerciseLinkRequest) ProtoMessage() {}

func (x *AddExerciseLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExerciseLinkRequest.ProtoReflect.Descriptor instead.
func (*AddExerciseLinkRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{27}
}

func (x *AddExerciseLinkRequest) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *AddExerciseLinkRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddExerciseLinkRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// DeleteExerciseLinkRequest is used to delete a link from an exercise
type DeleteExerciseLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExerciseLinkRequest) Reset() {
	*x = DeleteExerciseLinkRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExerciseLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExerciseLinkRequest) ProtoMessage() {}

func (x *DeleteExerciseLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExerciseLinkRequest.ProtoReflect.Descriptor instead.
func (*DeleteExerciseLinkRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteExerciseLinkRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// CreatePracticeSessionRequest is used to create a new practice session
type CreatePracticeSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Notes         string                 `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePracticeSessionRequest) Reset() {
	*x = CreatePracticeSessionRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePracticeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePracticeSessionRequest) ProtoMessage() {}

func (x *CreatePracticeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePracticeSessionRequest.ProtoReflect.Descriptor instead.
func (*CreatePracticeSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{29}
}

func (x *CreatePracticeSessionRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreatePracticeSessionRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreatePracticeSessionRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// GetPracticeSessionRequest is used to retrieve a specific practice session
type GetPracticeSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPracticeSessionRequest) Reset() {
	*x = GetPracticeSessionRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPracticeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPracticeSessionRequest) ProtoMessage() {}

func (x *GetPracticeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPracticeSessionRequest.ProtoReflect.Descriptor instead.
func (*GetPracticeSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{30}
}

func (x *GetPracticeSessionRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ListPracticeSessionsRequest is used to list practice sessions with pagination
type ListPracticeSessionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`     // Optional: filter by date range
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`           // Optional: filter by date range
	ExerciseId    int32                  `protobuf:"varint,5,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"` // Optional: filter by exercise
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPracticeSessionsRequest) Reset() {
	*x = ListPracticeSessionsRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPracticeSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPracticeSessionsRequest) ProtoMessage() {}

func (x *ListPracticeSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPracticeSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListPracticeSessionsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{31}
}

func (x *ListPracticeSessionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPracticeSessionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListPracticeSessionsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListPracticeSessionsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListPracticeSessionsRequest) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

// ListPracticeSessionsResponse contains a list of practice sessions and
// pagination info
type ListPracticeSessionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*PracticeSession     `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPracticeSessionsResponse) Reset() {
	*x = ListPracticeSessionsResponse{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPracticeSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPracticeSessionsResponse) ProtoMessage() {}

func (x *ListPracticeSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPracticeSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListPracticeSessionsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{32}
}

func (x *ListPracticeSessionsResponse) GetSessions() []*PracticeSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListPracticeSessionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListPracticeSessionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// UpdatePracticeSessionRequest is used to update a practice session
type UpdatePracticeSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Session       *PracticeSession       `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePracticeSessionRequest) Reset() {
	*x = UpdatePracticeSessionRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePracticeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePracticeSessionRequest) ProtoMessage() {}

func (x *UpdatePracticeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePracticeSessionRequest.ProtoReflect.Descriptor instead.
func (*UpdatePracticeSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{33}
}

func (x *UpdatePracticeSessionRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePracticeSessionRequest) GetSession() *PracticeSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *UpdatePracticeSessionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// DeletePracticeSessionRequest is used to delete a practice session
type DeletePracticeSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePracticeSessionRequest) Reset() {
	*x = DeletePracticeSessionRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePracticeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePracticeSessionRequest) ProtoMessage() {}

func (x *DeletePracticeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePracticeSessionRequest.ProtoReflect.Descriptor instead.
func (*DeletePracticeSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{34}
}

func (x *DeletePracticeSessionRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// CreateExerciseHistoryRequest is used to create a new exercise history entry
type CreateExerciseHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    int32                  `protobuf:"varint,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Bpms          []int32                `protobuf:"varint,4,rep,packed,name=bpms,proto3" json:"bpms,omitempty"`
	TimeSignature string                 `protobuf:"bytes,5,opt,name=time_signature,json=timeSignature,proto3" json:"time_signature,omitempty"`
	Notes         string                 `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	Rating        int32                  `protobuf:"varint,7,opt,name=rating,proto3" json:"rating,omitempty"`
	SessionId     int32                  `protobuf:"varint,8,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExerciseHistoryRequest) Reset() {
	*x = CreateExerciseHistoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExerciseHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExerciseHistoryRequest) ProtoMessage() {}

func (x *CreateExerciseHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExerciseHistoryRequest.ProtoReflect.Descriptor instead.
func (*CreateExerciseHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{35}
}

func (x *CreateExerciseHistoryRequest) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *CreateExerciseHistoryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateExerciseHistoryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateExerciseHistoryRequest) GetBpms() []int32 {
	if x != nil {
		return x.Bpms
	}
	return nil
}

func (x *CreateExerciseHistoryRequest) GetTimeSignature() string {
	if x != nil {
		return x.TimeSignature
	}
	return ""
}

func (x *CreateExerciseHistoryRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *CreateExerciseHistoryRequest) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CreateExerciseHistoryRequest) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// GetExerciseHistoryRequest is used to retrieve a specific exercise history
// entry
type GetExerciseHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExerciseHistoryRequest) Reset() {
	*x = GetExerciseHistoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExerciseHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseHistoryRequest) ProtoMessage() {}

func (x *GetExerciseHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetExerciseHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{36}
}

func (x *GetExerciseHistoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ListExerciseHistoryRequest is used to list exercise history entries with
// pagination
type ListExerciseHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	ExerciseId    int32                  `protobuf:"varint,3,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"` // Optional: filter by exercise
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`     // Optional: filter by date range
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`           // Optional: filter by date range
	SessionId     int32                  `protobuf:"varint,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`    // Optional: filter by session
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExerciseHistoryRequest) Reset() {
	*x = ListExerciseHistoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExerciseHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExerciseHistoryRequest) ProtoMessage() {}

func (x *ListExerciseHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExerciseHistoryRequest.ProtoReflect.Descriptor instead.
func (*ListExerciseHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{37}
}

func (x *ListExerciseHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListExerciseHistoryRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListExerciseHistoryRequest) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *ListExerciseHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListExerciseHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListExerciseHistoryRequest) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

// ListExerciseHistoryResponse contains a list of exercise history entries and
// pagination info
type ListExerciseHistoryResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	HistoryEntries []*ExerciseHistory     `protobuf:"bytes,1,rep,name=history_entries,json=historyEntries,proto3" json:"history_entries,omitempty"`
	NextPageToken  string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount     int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListExerciseHistoryResponse) Reset() {
	*x = ListExerciseHistoryResponse{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExerciseHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExerciseHistoryResponse) ProtoMessage() {}

func (x *ListExerciseHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExerciseHistoryResponse.ProtoReflect.Descriptor instead.
func (*ListExerciseHistoryResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{38}
}

func (x *ListExerciseHistoryResponse) GetHistoryEntries() []*ExerciseHistory {
	if x != nil {
		return x.HistoryEntries
	}
	return nil
}

func (x *ListExerciseHistoryResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListExerciseHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// UpdateExerciseHistoryRequest is used to update an exercise history entry
type UpdateExerciseHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	History       *ExerciseHistory       `protobuf:"bytes,2,opt,name=history,proto3" json:"history,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExerciseHistoryRequest) Reset() {
	*x = UpdateExerciseHistoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExerciseHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExerciseHistoryRequest) ProtoMessage() {}

func (x *UpdateExerciseHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExerciseHistoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateExerciseHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateExerciseHistoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateExerciseHistoryRequest) GetHistory() *ExerciseHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *UpdateExerciseHistoryRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// DeleteExerciseHistoryRequest is used to delete an exercise history entry
type DeleteExerciseHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExerciseHistoryRequest) Reset() {
	*x = DeleteExerciseHistoryRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExerciseHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExerciseHistoryRequest) ProtoMessage() {}

func (x *DeleteExerciseHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExerciseHistoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteExerciseHistoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteExerciseHistoryRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetExerciseStatsRequest is used to get statistics for an exercise
type GetExerciseStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId    int32                  `protobuf:"varint,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // Optional: filter by date range
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // Optional: filter by date range
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExerciseStatsRequest) Reset() {
	*x = GetExerciseStatsRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExerciseStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExerciseStatsRequest) ProtoMessage() {}

func (x *GetExerciseStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExerciseStatsRequest.ProtoReflect.Descriptor instead.
func (*GetExerciseStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{41}
}

func (x *GetExerciseStatsRequest) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *GetExerciseStatsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetExerciseStatsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

// ExerciseStats contains statistics for an exercise
type ExerciseStats struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId                   int32                  `protobuf:"varint,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	ExerciseName                 string                 `protobuf:"bytes,2,opt,name=exercise_name,json=exerciseName,proto3" json:"exercise_name,omitempty"`
	PracticeCount                int32                  `protobuf:"varint,3,opt,name=practice_count,json=practiceCount,proto3" json:"practice_count,omitempty"`
	TotalPracticeDurationSeconds int32                  `protobuf:"varint,4,opt,name=total_practice_duration_seconds,json=totalPracticeDurationSeconds,proto3" json:"total_practice_duration_seconds,omitempty"`
	AvgRating                    float64                `protobuf:"fixed64,5,opt,name=avg_rating,json=avgRating,proto3" json:"avg_rating,omitempty"`
	MaxBpm                       int32                  `protobuf:"varint,6,opt,name=max_bpm,json=maxBpm,proto3" json:"max_bpm,omitempty"`
	MinBpm                       int32                  `protobuf:"varint,7,opt,name=min_bpm,json=minBpm,proto3" json:"min_bpm,omitempty"`
	AvgBpm                       float64                `protobuf:"fixed64,8,opt,name=avg_bpm,json=avgBpm,proto3" json:"avg_bpm,omitempty"`
	BpmProgress                  []*BpmProgressPoint    `protobuf:"bytes,9,rep,name=bpm_progress,json=bpmProgress,proto3" json:"bpm_progress,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ExerciseStats) Reset() {
	*x = ExerciseStats{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseStats) ProtoMessage() {}

func (x *ExerciseStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseStats.ProtoReflect.Descriptor instead.
func (*ExerciseStats) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{42}
}

func (x *ExerciseStats) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *ExerciseStats) GetExerciseName() string {
	if x != nil {
		return x.ExerciseName
	}
	return ""
}

func (x *ExerciseStats) GetPracticeCount() int32 {
	if x != nil {
		return x.PracticeCount
	}
	return 0
}

func (x *ExerciseStats) GetTotalPracticeDurationSeconds() int32 {
	if x != nil {
		return x.TotalPracticeDurationSeconds
	}
	return 0
}

func (x *ExerciseStats) GetAvgRating() float64 {
	if x != nil {
		return x.AvgRating
	}
	return 0
}

func (x *ExerciseStats) GetMaxBpm() int32 {
	if x != nil {
		return x.MaxBpm
	}
	return 0
}

func (x *ExerciseStats) GetMinBpm() int32 {
	if x != nil {
		return x.MinBpm
	}
	return 0
}

func (x *ExerciseStats) GetAvgBpm() float64 {
	if x != nil {
		return x.AvgBpm
	}
	return 0
}

func (x *ExerciseStats) GetBpmProgress() []*BpmProgressPoint {
	if x != nil {
		return x.BpmProgress
	}
	return nil
}

// BpmProgressPoint represents a point in the BPM progress chart
type BpmProgressPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Bpm           int32                  `protobuf:"varint,2,opt,name=bpm,proto3" json:"bpm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BpmProgressPoint) Reset() {
	*x = BpmProgressPoint{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BpmProgressPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BpmProgressPoint) ProtoMessage() {}

func (x *BpmProgressPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BpmProgressPoint.ProtoReflect.Descriptor instead.
func (*BpmProgressPoint) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{43}
}

func (x *BpmProgressPoint) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *BpmProgressPoint) GetBpm() int32 {
	if x != nil {
		return x.Bpm
	}
	return 0
}

// GetPracticeStatsRequest is used to get statistics for practice sessions
type GetPracticeStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`     // Optional: filter by date range
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`           // Optional: filter by date range
	CategoryId    int32                  `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // Optional: filter by category
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPracticeStatsRequest) Reset() {
	*x = GetPracticeStatsRequest{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPracticeStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPracticeStatsRequest) ProtoMessage() {}

func (x *GetPracticeStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPracticeStatsRequest.ProtoReflect.Descriptor instead.
func (*GetPracticeStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{44}
}

func (x *GetPracticeStatsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetPracticeStatsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetPracticeStatsRequest) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

// PracticeStats contains statistics for practice sessions
type PracticeStats struct {
	state                     protoimpl.MessageState      `protogen:"open.v1"`
	TotalSessions             int32                       `protobuf:"varint,1,opt,name=total_sessions,json=totalSessions,proto3" json:"total_sessions,omitempty"`
	TotalDurationSeconds      int32                       `protobuf:"varint,2,opt,name=total_duration_seconds,json=totalDurationSeconds,proto3" json:"total_duration_seconds,omitempty"`
	AvgSessionDurationSeconds float64                     `protobuf:"fixed64,3,opt,name=avg_session_duration_seconds,json=avgSessionDurationSeconds,proto3" json:"avg_session_duration_seconds,omitempty"`
	ExerciseDistribution      []*ExerciseTimeDistribution `protobuf:"bytes,4,rep,name=exercise_distribution,json=exerciseDistribution,proto3" json:"exercise_distribution,omitempty"`
	CategoryDistribution      []*CategoryTimeDistribution `protobuf:"bytes,5,rep,name=category_distribution,json=categoryDistribution,proto3" json:"category_distribution,omitempty"`
	PracticeFrequency         []*PracticeTimePoint        `protobuf:"bytes,6,rep,name=practice_frequency,json=practiceFrequency,proto3" json:"practice_frequency,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *PracticeStats) Reset() {
	*x = PracticeStats{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PracticeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PracticeStats) ProtoMessage() {}

func (x *PracticeStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PracticeStats.ProtoReflect.Descriptor instead.
func (*PracticeStats) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{45}
}

func (x *PracticeStats) GetTotalSessions() int32 {
	if x != nil {
		return x.TotalSessions
	}
	return 0
}

func (x *PracticeStats) GetTotalDurationSeconds() int32 {
	if x != nil {
		return x.TotalDurationSeconds
	}
	return 0
}

func (x *PracticeStats) GetAvgSessionDurationSeconds() float64 {
	if x != nil {
		return x.AvgSessionDurationSeconds
	}
	return 0
}

func (x *PracticeStats) GetExerciseDistribution() []*ExerciseTimeDistribution {
	if x != nil {
		return x.ExerciseDistribution
	}
	return nil
}

func (x *PracticeStats) GetCategoryDistribution() []*CategoryTimeDistribution {
	if x != nil {
		return x.CategoryDistribution
	}
	return nil
}

func (x *PracticeStats) GetPracticeFrequency() []*PracticeTimePoint {
	if x != nil {
		return x.PracticeFrequency
	}
	return nil
}

// ExerciseTimeDistribution shows how much time was spent on each exercise
type ExerciseTimeDistribution struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ExerciseId      int32                  `protobuf:"varint,1,opt,name=exercise_id,json=exerciseId,proto3" json:"exercise_id,omitempty"`
	ExerciseName    string                 `protobuf:"bytes,2,opt,name=exercise_name,json=exerciseName,proto3" json:"exercise_name,omitempty"`
	DurationSeconds int32                  `protobuf:"varint,3,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	Percentage      float64                `protobuf:"fixed64,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExerciseTimeDistribution) Reset() {
	*x = ExerciseTimeDistribution{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExerciseTimeDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseTimeDistribution) ProtoMessage() {}

func (x *ExerciseTimeDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseTimeDistribution.ProtoReflect.Descriptor instead.
func (*ExerciseTimeDistribution) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{46}
}

func (x *ExerciseTimeDistribution) GetExerciseId() int32 {
	if x != nil {
		return x.ExerciseId
	}
	return 0
}

func (x *ExerciseTimeDistribution) GetExerciseName() string {
	if x != nil {
		return x.ExerciseName
	}
	return ""
}

func (x *ExerciseTimeDistribution) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *ExerciseTimeDistribution) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

// CategoryTimeDistribution shows how much time was spent on each category
type CategoryTimeDistribution struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CategoryId        int32                  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName      string                 `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	DurationSeconds   int32                  `protobuf:"varint,3,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	Percentage        float64                `protobuf:"fixed64,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	PracticeFrequency []*PracticeTimePoint   `protobuf:"bytes,5,rep,name=practice_frequency,json=practiceFrequency,proto3" json:"practice_frequency,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CategoryTimeDistribution) Reset() {
	*x = CategoryTimeDistribution{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryTimeDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryTimeDistribution) ProtoMessage() {}

func (x *CategoryTimeDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryTimeDistribution.ProtoReflect.Descriptor instead.
func (*CategoryTimeDistribution) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{47}
}

func (x *CategoryTimeDistribution) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CategoryTimeDistribution) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *CategoryTimeDistribution) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *CategoryTimeDistribution) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *CategoryTimeDistribution) GetPracticeFrequency() []*PracticeTimePoint {
	if x != nil {
		return x.PracticeFrequency
	}
	return nil
}

// PracticeTimePoint represents a point in the practice frequency chart
type PracticeTimePoint struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Date            *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	DurationSeconds int32                  `protobuf:"varint,2,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PracticeTimePoint) Reset() {
	*x = PracticeTimePoint{}
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PracticeTimePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PracticeTimePoint) ProtoMessage() {}

func (x *PracticeTimePoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_tempus_tempus_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PracticeTimePoint.ProtoReflect.Descriptor instead.
func (*PracticeTimePoint) Descriptor() ([]byte, []int) {
	return file_api_v1_tempus_tempus_proto_rawDescGZIP(), []int{48}
}

func (x *PracticeTimePoint) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *PracticeTimePoint) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

var File_api_v1_tempus_tempus_proto protoreflect.FileDescriptor

const file_api_v1_tempus_tempus_proto_rawDesc = "" +
	"\n" +
	"\x1aapi/v1/tempus/tempus.proto\x12\n" +
	"drummer.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\"\xc6\x01\n" +
	"\bCategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x87\x01\n" +
	"\x03Tag\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12!\n" +
	"\fcategory_ids\x18\x04 \x03(\x05R\vcategoryIds\"\xe5\x02\n" +
	"\bExercise\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x17\n" +
	"\atag_ids\x18\x06 \x03(\x05R\x06tagIds\x12!\n" +
	"\fcategory_ids\x18\a \x03(\x05R\vcategoryIds\x121\n" +
	"\x06images\x18\b \x03(\v2\x19.drummer.v1.ExerciseImageR\x06images\x12.\n" +
	"\x05links\x18\t \x03(\v2\x18.drummer.v1.ExerciseLinkR\x05links\"\xf5\x01\n" +
	"\rExerciseImage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vexercise_id\x18\x02 \x01(\x05R\n" +
	"exerciseId\x12\x1d\n" +
	"\n" +
	"image_data\x18\x03 \x01(\fR\timageData\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12\x1b\n" +
	"\tmime_type\x18\x05 \x01(\tR\bmimeType\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xae\x01\n" +
	"\fExerciseLink\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vexercise_id\x18\x02 \x01(\x05R\n" +
	"exerciseId\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xda\x02\n" +
	"\x0fPracticeSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\texercises\x18\a \x03(\v2\x1b.drummer.v1.ExerciseHistoryR\texercises\"\xee\x02\n" +
	"\x0fExerciseHistory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vexercise_id\x18\x02 \x01(\x05R\n" +
	"exerciseId\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x12\n" +
	"\x04bpms\x18\x05 \x03(\x05R\x04bpms\x12%\n" +
	"\x0etime_signature\x18\x06 \x01(\tR\rtimeSignature\x12\x14\n" +
	"\x05notes\x18\a \x01(\tR\x05notes\x12\x16\n" +
	"\x06rating\x18\b \x01(\x05R\x06rating\x120\n" +
	"\bexercise\x18\t \x01(\v2\x14.drummer.v1.ExerciseR\bexercise\x12\x1d\n" +
	"\n" +
	"session_id\x18\n" +
	" \x01(\x05R\tsessionId\"M\n" +
	"\x15CreateCategoryRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"$\n" +
	"\x12GetCategoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"S\n" +
	"\x15ListCategoriesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\x97\x01\n" +
	"\x16ListCategoriesResponse\x124\n" +
	"\n" +
	"categories\x18\x01 \x03(\v2\x14.drummer.v1.CategoryR\n" +
	"categories\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\x96\x01\n" +
	"\x15UpdateCategoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x120\n" +
	"\bcategory\x18\x02 \x01(\v2\x14.drummer.v1.CategoryR\bcategory\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"'\n" +
	"\x15DeleteCategoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"I\n" +
	"\x10CreateTagRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fcategory_ids\x18\x02 \x03(\x05R\vcategoryIds\"\x1f\n" +
	"\rGetTagRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"n\n" +
	"\x0fListTagsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1f\n" +
	"\vcategory_id\x18\x03 \x01(\x05R\n" +
	"categoryId\"\x80\x01\n" +
	"\x10ListTagsResponse\x12#\n" +
	"\x04tags\x18\x01 \x03(\v2\x0f.drummer.v1.TagR\x04tags\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\x82\x01\n" +
	"\x10UpdateTagRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12!\n" +
	"\x03tag\x18\x02 \x01(\v2\x0f.drummer.v1.TagR\x03tag\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\"\n" +
	"\x10DeleteTagRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xec\x01\n" +
	"\x15CreateExerciseRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x17\n" +
	"\atag_ids\x18\x03 \x03(\x05R\x06tagIds\x12!\n" +
	"\fcategory_ids\x18\x04 \x03(\x05R\vcategoryIds\x121\n" +
	"\x06images\x18\x05 \x03(\v2\x19.drummer.v1.ExerciseImageR\x06images\x12.\n" +
	"\x05links\x18\x06 \x03(\v2\x18.drummer.v1.ExerciseLinkR\x05links\"$\n" +
	"\x12GetExerciseRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x8a\x01\n" +
	"\x14ListExercisesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1f\n" +
	"\vcategory_id\x18\x03 \x01(\x05R\n" +
	"categoryId\x12\x15\n" +
	"\x06tag_id\x18\x04 \x01(\x05R\x05tagId\"\x94\x01\n" +
	"\x15ListExercisesResponse\x122\n" +
	"\texercises\x18\x01 \x03(\v2\x14.drummer.v1.ExerciseR\texercises\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\x96\x01\n" +
	"\x15UpdateExerciseRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x120\n" +
	"\bexercise\x18\x02 \x01(\v2\x14.drummer.v1.ExerciseR\bexercise\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"'\n" +
	"\x15DeleteExerciseRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xb4\x01\n" +
	"\x17AddExerciseImageRequest\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\x05R\n" +
	"exerciseId\x12\x1d\n" +
	"\n" +
	"image_data\x18\x02 \x01(\fR\timageData\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12\x1b\n" +
	"\tmime_type\x18\x04 \x01(\tR\bmimeType\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\",\n" +
	"\x1aDeleteExerciseImageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"m\n" +
	"\x16AddExerciseLinkRequest\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\x05R\n" +
	"exerciseId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"+\n" +
	"\x19DeleteExerciseLinkRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xa6\x01\n" +
	"\x1cCreatePracticeSessionRequest\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x14\n" +
	"\x05notes\x18\x03 \x01(\tR\x05notes\"+\n" +
	"\x19GetPracticeSessionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xec\x01\n" +
	"\x1bListPracticeSessionsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x129\n" +
	"\n" +
	"start_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x1f\n" +
	"\vexercise_id\x18\x05 \x01(\x05R\n" +
	"exerciseId\"\xa0\x01\n" +
	"\x1cListPracticeSessionsResponse\x127\n" +
	"\bsessions\x18\x01 \x03(\v2\x1b.drummer.v1.PracticeSessionR\bsessions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xa2\x01\n" +
	"\x1cUpdatePracticeSessionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x125\n" +
	"\asession\x18\x02 \x01(\v2\x1b.drummer.v1.PracticeSessionR\asession\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\".\n" +
	"\x1cDeletePracticeSessionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xb9\x02\n" +
	"\x1cCreateExerciseHistoryRequest\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\x05R\n" +
	"exerciseId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x12\n" +
	"\x04bpms\x18\x04 \x03(\x05R\x04bpms\x12%\n" +
	"\x0etime_signature\x18\x05 \x01(\tR\rtimeSignature\x12\x14\n" +
	"\x05notes\x18\x06 \x01(\tR\x05notes\x12\x16\n" +
	"\x06rating\x18\a \x01(\x05R\x06rating\x12\x1d\n" +
	"\n" +
	"session_id\x18\b \x01(\x05R\tsessionId\"+\n" +
	"\x19GetExerciseHistoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x8a\x02\n" +
	"\x1aListExerciseHistoryRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1f\n" +
	"\vexercise_id\x18\x03 \x01(\x05R\n" +
	"exerciseId\x129\n" +
	"\n" +
	"start_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x1d\n" +
	"\n" +
	"session_id\x18\x06 \x01(\x05R\tsessionId\"\xac\x01\n" +
	"\x1bListExerciseHistoryResponse\x12D\n" +
	"\x0fhistory_entries\x18\x01 \x03(\v2\x1b.drummer.v1.ExerciseHistoryR\x0ehistoryEntries\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xa2\x01\n" +
	"\x1cUpdateExerciseHistoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x125\n" +
	"\ahistory\x18\x02 \x01(\v2\x1b.drummer.v1.ExerciseHistoryR\ahistory\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\".\n" +
	"\x1cDeleteExerciseHistoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\xac\x01\n" +
	"\x17GetExerciseStatsRequest\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\x05R\n" +
	"exerciseId\x129\n" +
	"\n" +
	"start_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"\xee\x02\n" +
	"\rExerciseStats\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\x05R\n" +
	"exerciseId\x12#\n" +
	"\rexercise_name\x18\x02 \x01(\tR\fexerciseName\x12%\n" +
	"\x0epractice_count\x18\x03 \x01(\x05R\rpracticeCount\x12E\n" +
	"\x1ftotal_practice_duration_seconds\x18\x04 \x01(\x05R\x1ctotalPracticeDurationSeconds\x12\x1d\n" +
	"\n" +
	"avg_rating\x18\x05 \x01(\x01R\tavgRating\x12\x17\n" +
	"\amax_bpm\x18\x06 \x01(\x05R\x06maxBpm\x12\x17\n" +
	"\amin_bpm\x18\a \x01(\x05R\x06minBpm\x12\x17\n" +
	"\aavg_bpm\x18\b \x01(\x01R\x06avgBpm\x12?\n" +
	"\fbpm_progress\x18\t \x03(\v2\x1c.drummer.v1.BpmProgressPointR\vbpmProgress\"T\n" +
	"\x10BpmProgressPoint\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x10\n" +
	"\x03bpm\x18\x02 \x01(\x05R\x03bpm\"\xac\x01\n" +
	"\x17GetPracticeStatsRequest\x129\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x1f\n" +
	"\vcategory_id\x18\x03 \x01(\x05R\n" +
	"categoryId\"\xb1\x03\n" +
	"\rPracticeStats\x12%\n" +
	"\x0etotal_sessions\x18\x01 \x01(\x05R\rtotalSessions\x124\n" +
	"\x16total_duration_seconds\x18\x02 \x01(\x05R\x14totalDurationSeconds\x12?\n" +
	"\x1cavg_session_duration_seconds\x18\x03 \x01(\x01R\x19avgSessionDurationSeconds\x12Y\n" +
	"\x15exercise_distribution\x18\x04 \x03(\v2$.drummer.v1.ExerciseTimeDistributionR\x14exerciseDistribution\x12Y\n" +
	"\x15category_distribution\x18\x05 \x03(\v2$.drummer.v1.CategoryTimeDistributionR\x14categoryDistribution\x12L\n" +
	"\x12practice_frequency\x18\x06 \x03(\v2\x1d.drummer.v1.PracticeTimePointR\x11practiceFrequency\"\xab\x01\n" +
	"\x18ExerciseTimeDistribution\x12\x1f\n" +
	"\vexercise_id\x18\x01 \x01(\x05R\n" +
	"exerciseId\x12#\n" +
	"\rexercise_name\x18\x02 \x01(\tR\fexerciseName\x12)\n" +
	"\x10duration_seconds\x18\x03 \x01(\x05R\x0fdurationSeconds\x12\x1e\n" +
	"\n" +
	"percentage\x18\x04 \x01(\x01R\n" +
	"percentage\"\xf9\x01\n" +
	"\x18CategoryTimeDistribution\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\x05R\n" +
	"categoryId\x12#\n" +
	"\rcategory_name\x18\x02 \x01(\tR\fcategoryName\x12)\n" +
	"\x10duration_seconds\x18\x03 \x01(\x05R\x0fdurationSeconds\x12\x1e\n" +
	"\n" +
	"percentage\x18\x04 \x01(\x01R\n" +
	"percentage\x12L\n" +
	"\x12practice_frequency\x18\x05 \x03(\v2\x1d.drummer.v1.PracticeTimePointR\x11practiceFrequency\"n\n" +
	"\x11PracticeTimePoint\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12)\n" +
	"\x10duration_seconds\x18\x02 \x01(\x05R\x0fdurationSeconds2\x9f\x04\n" +
	"\x0fCategoryService\x12d\n" +
	"\x0eCreateCategory\x12!.drummer.v1.CreateCategoryRequest\x1a\x14.drummer.v1.Category\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v1/categories\x12`\n" +
	"\vGetCategory\x12\x1e.drummer.v1.GetCategoryRequest\x1a\x14.drummer.v1.Category\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/categories/{id}\x12o\n" +
	"\x0eListCategories\x12!.drummer.v1.ListCategoriesRequest\x1a\".drummer.v1.ListCategoriesResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/categories\x12i\n" +
	"\x0eUpdateCategory\x12!.drummer.v1.UpdateCategoryRequest\x1a\x14.drummer.v1.Category\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*2\x13/v1/categories/{id}\x12h\n" +
	"\x0eDeleteCategory\x12!.drummer.v1.DeleteCategoryRequest\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v1/categories/{id}2\xb3\x03\n" +
	"\n" +
	"TagService\x12O\n" +
	"\tCreateTag\x12\x1c.drummer.v1.CreateTagRequest\x1a\x0f.drummer.v1.Tag\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\"\b/v1/tags\x12K\n" +
	"\x06GetTag\x12\x19.drummer.v1.GetTagRequest\x1a\x0f.drummer.v1.Tag\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/v1/tags/{id}\x12W\n" +
	"\bListTags\x12\x1b.drummer.v1.ListTagsRequest\x1a\x1c.drummer.v1.ListTagsResponse\"\x10\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/v1/tags\x12T\n" +
	"\tUpdateTag\x12\x1c.drummer.v1.UpdateTagRequest\x1a\x0f.drummer.v1.Tag\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*2\r/v1/tags/{id}\x12X\n" +
	"\tDeleteTag\x12\x1c.drummer.v1.DeleteTagRequest\x1a\x16.google.protobuf.Empty\"\x15\x82\xd3\xe4\x93\x02\x0f*\r/v1/tags/{id}2\x88\t\n" +
	"\x0fExerciseService\x12c\n" +
	"\x0eCreateExercise\x12!.drummer.v1.CreateExerciseRequest\x1a\x14.drummer.v1.Exercise\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/v1/exercises\x12_\n" +
	"\vGetExercise\x12\x1e.drummer.v1.GetExerciseRequest\x1a\x14.drummer.v1.Exercise\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/exercises/{id}\x12k\n" +
	"\rListExercises\x12 .drummer.v1.ListExercisesRequest\x1a!.drummer.v1.ListExercisesResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/v1/exercises\x12h\n" +
	"\x0eUpdateExercise\x12!.drummer.v1.UpdateExerciseRequest\x1a\x14.drummer.v1.Exercise\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*2\x12/v1/exercises/{id}\x12g\n" +
	"\x0eDeleteExercise\x12!.drummer.v1.DeleteExerciseRequest\x1a\x16.google.protobuf.Empty\"\x1a\x82\xd3\xe4\x93\x02\x14*\x12/v1/exercises/{id}\x12\x81\x01\n" +
	"\x10AddExerciseImage\x12#.drummer.v1.AddExerciseImageRequest\x1a\x19.drummer.v1.ExerciseImage\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/exercises/{exercise_id}/images\x12w\n" +
	"\x13DeleteExerciseImage\x12&.drummer.v1.DeleteExerciseImageRequest\x1a\x16.google.protobuf.Empty\" \x82\xd3\xe4\x93\x02\x1a*\x18/v1/exercise-images/{id}\x12}\n" +
	"\x0fAddExerciseLink\x12\".drummer.v1.AddExerciseLinkRequest\x1a\x18.drummer.v1.ExerciseLink\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v1/exercises/{exercise_id}/links\x12t\n" +
	"\x12DeleteExerciseLink\x12%.drummer.v1.DeleteExerciseLinkRequest\x1a\x16.google.protobuf.Empty\"\x1f\x82\xd3\xe4\x93\x02\x19*\x17/v1/exercise-links/{id}\x12}\n" +
	"\x10GetExerciseStats\x12#.drummer.v1.GetExerciseStatsRequest\x1a\x19.drummer.v1.ExerciseStats\")\x82\xd3\xe4\x93\x02#\x12!/v1/exercises/{exercise_id}/stats2\xeb\x05\n" +
	"\x16PracticeSessionService\x12w\n" +
	"\x15CreatePracticeSession\x12(.drummer.v1.CreatePracticeSessionRequest\x1a\x1b.drummer.v1.PracticeSession\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v1/sessions\x12s\n" +
	"\x12GetPracticeSession\x12%.drummer.v1.GetPracticeSessionRequest\x1a\x1b.drummer.v1.PracticeSession\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/sessions/{id}\x12\x7f\n" +
	"\x14ListPracticeSessions\x12'.drummer.v1.ListPracticeSessionsRequest\x1a(.drummer.v1.ListPracticeSessionsResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/v1/sessions\x12|\n" +
	"\x15UpdatePracticeSession\x12(.drummer.v1.UpdatePracticeSessionRequest\x1a\x1b.drummer.v1.PracticeSession\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*2\x11/v1/sessions/{id}\x12t\n" +
	"\x15DeletePracticeSession\x12(.drummer.v1.DeletePracticeSessionRequest\x1a\x16.google.protobuf.Empty\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/v1/sessions/{id}\x12n\n" +
	"\x10GetPracticeStats\x12#.drummer.v1.GetPracticeStatsRequest\x1a\x19.drummer.v1.PracticeStats\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/sessions/stats2\xf3\x04\n" +
	"\x16ExerciseHistoryService\x12v\n" +
	"\x15CreateExerciseHistory\x12(.drummer.v1.CreateExerciseHistoryRequest\x1a\x1b.drummer.v1.ExerciseHistory\"\x16\x82\xd3\xe4\x93\x02\x10:\x01*\"\v/v1/history\x12r\n" +
	"\x12GetExerciseHistory\x12%.drummer.v1.GetExerciseHistoryRequest\x1a\x1b.drummer.v1.ExerciseHistory\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/history/{id}\x12{\n" +
	"\x13ListExerciseHistory\x12&.drummer.v1.ListExerciseHistoryRequest\x1a'.drummer.v1.ListExerciseHistoryResponse\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/v1/history\x12{\n" +
	"\x15UpdateExerciseHistory\x12(.drummer.v1.UpdateExerciseHistoryRequest\x1a\x1b.drummer.v1.ExerciseHistory\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*2\x10/v1/history/{id}\x12s\n" +
	"\x15DeleteExerciseHistory\x12(.drummer.v1.DeleteExerciseHistoryRequest\x1a\x16.google.protobuf.Empty\"\x18\x82\xd3\xe4\x93\x02\x12*\x10/v1/history/{id}B\xa6\x01\n" +
	"\x0ecom.drummer.v1B\vTempusProtoP\x01Z>github.com/Zach-Johnson/drum-practice/proto/tempus/v1;tempusv1\xa2\x02\x03DXX\xaa\x02\n" +
	"Drummer.V1\xca\x02\n" +
	"Drummer\\V1\xe2\x02\x16Drummer\\V1\\GPBMetadata\xea\x02\vDrummer::V1b\x06proto3"

var (
	file_api_v1_tempus_tempus_proto_rawDescOnce sync.Once
	file_api_v1_tempus_tempus_proto_rawDescData []byte
)

func file_api_v1_tempus_tempus_proto_rawDescGZIP() []byte {
	file_api_v1_tempus_tempus_proto_rawDescOnce.Do(func() {
		file_api_v1_tempus_tempus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_tempus_tempus_proto_rawDesc), len(file_api_v1_tempus_tempus_proto_rawDesc)))
	})
	return file_api_v1_tempus_tempus_proto_rawDescData
}

var file_api_v1_tempus_tempus_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_api_v1_tempus_tempus_proto_goTypes = []any{
	(*Category)(nil),                     // 0: drummer.v1.Category
	(*Tag)(nil),                          // 1: drummer.v1.Tag
	(*Exercise)(nil),                     // 2: drummer.v1.Exercise
	(*ExerciseImage)(nil),                // 3: drummer.v1.ExerciseImage
	(*ExerciseLink)(nil),                 // 4: drummer.v1.ExerciseLink
	(*PracticeSession)(nil),              // 5: drummer.v1.PracticeSession
	(*ExerciseHistory)(nil),              // 6: drummer.v1.ExerciseHistory
	(*CreateCategoryRequest)(nil),        // 7: drummer.v1.CreateCategoryRequest
	(*GetCategoryRequest)(nil),           // 8: drummer.v1.GetCategoryRequest
	(*ListCategoriesRequest)(nil),        // 9: drummer.v1.ListCategoriesRequest
	(*ListCategoriesResponse)(nil),       // 10: drummer.v1.ListCategoriesResponse
	(*UpdateCategoryRequest)(nil),        // 11: drummer.v1.UpdateCategoryRequest
	(*DeleteCategoryRequest)(nil),        // 12: drummer.v1.DeleteCategoryRequest
	(*CreateTagRequest)(nil),             // 13: drummer.v1.CreateTagRequest
	(*GetTagRequest)(nil),                // 14: drummer.v1.GetTagRequest
	(*ListTagsRequest)(nil),              // 15: drummer.v1.ListTagsRequest
	(*ListTagsResponse)(nil),             // 16: drummer.v1.ListTagsResponse
	(*UpdateTagRequest)(nil),             // 17: drummer.v1.UpdateTagRequest
	(*DeleteTagRequest)(nil),             // 18: drummer.v1.DeleteTagRequest
	(*CreateExerciseRequest)(nil),        // 19: drummer.v1.CreateExerciseRequest
	(*GetExerciseRequest)(nil),           // 20: drummer.v1.GetExerciseRequest
	(*ListExercisesRequest)(nil),         // 21: drummer.v1.ListExercisesRequest
	(*ListExercisesResponse)(nil),        // 22: drummer.v1.ListExercisesResponse
	(*UpdateExerciseRequest)(nil),        // 23: drummer.v1.UpdateExerciseRequest
	(*DeleteExerciseRequest)(nil),        // 24: drummer.v1.DeleteExerciseRequest
	(*AddExerciseImageRequest)(nil),      // 25: drummer.v1.AddExerciseImageRequest
	(*DeleteExerciseImageRequest)(nil),   // 26: drummer.v1.DeleteExerciseImageRequest
	(*AddExerciseLinkRequest)(nil),       // 27: drummer.v1.AddExerciseLinkRequest
	(*DeleteExerciseLinkRequest)(nil),    // 28: drummer.v1.DeleteExerciseLinkRequest
	(*CreatePracticeSessionRequest)(nil), // 29: drummer.v1.CreatePracticeSessionRequest
	(*GetPracticeSessionRequest)(nil),    // 30: drummer.v1.GetPracticeSessionRequest
	(*ListPracticeSessionsRequest)(nil),  // 31: drummer.v1.ListPracticeSessionsRequest
	(*ListPracticeSessionsResponse)(nil), // 32: drummer.v1.ListPracticeSessionsResponse
	(*UpdatePracticeSessionRequest)(nil), // 33: drummer.v1.UpdatePracticeSessionRequest
	(*DeletePracticeSessionRequest)(nil), // 34: drummer.v1.DeletePracticeSessionRequest
	(*CreateExerciseHistoryRequest)(nil), // 35: drummer.v1.CreateExerciseHistoryRequest
	(*GetExerciseHistoryRequest)(nil),    // 36: drummer.v1.GetExerciseHistoryRequest
	(*ListExerciseHistoryRequest)(nil),   // 37: drummer.v1.ListExerciseHistoryRequest
	(*ListExerciseHistoryResponse)(nil),  // 38: drummer.v1.ListExerciseHistoryResponse
	(*UpdateExerciseHistoryRequest)(nil), // 39: drummer.v1.UpdateExerciseHistoryRequest
	(*DeleteExerciseHistoryRequest)(nil), // 40: drummer.v1.DeleteExerciseHistoryRequest
	(*GetExerciseStatsRequest)(nil),      // 41: drummer.v1.GetExerciseStatsRequest
	(*ExerciseStats)(nil),                // 42: drummer.v1.ExerciseStats
	(*BpmProgressPoint)(nil),             // 43: drummer.v1.BpmProgressPoint
	(*GetPracticeStatsRequest)(nil),      // 44: drummer.v1.GetPracticeStatsRequest
	(*PracticeStats)(nil),                // 45: drummer.v1.PracticeStats
	(*ExerciseTimeDistribution)(nil),     // 46: drummer.v1.ExerciseTimeDistribution
	(*CategoryTimeDistribution)(nil),     // 47: drummer.v1.CategoryTimeDistribution
	(*PracticeTimePoint)(nil),            // 48: drummer.v1.PracticeTimePoint
	(*timestamppb.Timestamp)(nil),        // 49: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),        // 50: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),                // 51: google.protobuf.Empty
}
var file_api_v1_tempus_tempus_proto_depIdxs = []int32{
	49, // 0: drummer.v1.Category.created_at:type_name -> google.protobuf.Timestamp
	49, // 1: drummer.v1.Category.updated_at:type_name -> google.protobuf.Timestamp
	49, // 2: drummer.v1.Tag.created_at:type_name -> google.protobuf.Timestamp
	49, // 3: drummer.v1.Exercise.created_at:type_name -> google.protobuf.Timestamp
	49, // 4: drummer.v1.Exercise.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 5: drummer.v1.Exercise.images:type_name -> drummer.v1.ExerciseImage
	4,  // 6: drummer.v1.Exercise.links:type_name -> drummer.v1.ExerciseLink
	49, // 7: drummer.v1.ExerciseImage.created_at:type_name -> google.protobuf.Timestamp
	49, // 8: drummer.v1.ExerciseLink.created_at:type_name -> google.protobuf.Timestamp
	49, // 9: drummer.v1.PracticeSession.start_time:type_name -> google.protobuf.Timestamp
	49, // 10: drummer.v1.PracticeSession.end_time:type_name -> google.protobuf.Timestamp
	49, // 11: drummer.v1.PracticeSession.created_at:type_name -> google.protobuf.Timestamp
	49, // 12: drummer.v1.PracticeSession.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 13: drummer.v1.PracticeSession.exercises:type_name -> drummer.v1.ExerciseHistory
	49, // 14: drummer.v1.ExerciseHistory.start_time:type_name -> google.protobuf.Timestamp
	49, // 15: drummer.v1.ExerciseHistory.end_time:type_name -> google.protobuf.Timestamp
	2,  // 16: drummer.v1.ExerciseHistory.exercise:type_name -> drummer.v1.Exercise
	0,  // 17: drummer.v1.ListCategoriesResponse.categories:type_name -> drummer.v1.Category
	0,  // 18: drummer.v1.UpdateCategoryRequest.category:type_name -> drummer.v1.Category
	50, // 19: drummer.v1.UpdateCategoryRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 20: drummer.v1.ListTagsResponse.tags:type_name -> drummer.v1.Tag
	1,  // 21: drummer.v1.UpdateTagRequest.tag:type_name -> drummer.v1.Tag
	50, // 22: drummer.v1.UpdateTagRequest.update_mask:type_name -> google.protobuf.FieldMask
	3,  // 23: drummer.v1.CreateExerciseRequest.images:type_name -> drummer.v1.ExerciseImage
	4,  // 24: drummer.v1.CreateExerciseRequest.links:type_name -> drummer.v1.ExerciseLink
	2,  // 25: drummer.v1.ListExercisesResponse.exercises:type_name -> drummer.v1.Exercise
	2,  // 26: drummer.v1.UpdateExerciseRequest.exercise:type_name -> drummer.v1.Exercise
	50, // 27: drummer.v1.UpdateExerciseRequest.update_mask:type_name -> google.protobuf.FieldMask
	49, // 28: drummer.v1.CreatePracticeSessionRequest.start_time:type_name -> google.protobuf.Timestamp
	49, // 29: drummer.v1.CreatePracticeSessionRequest.end_time:type_name -> google.protobuf.Timestamp
	49, // 30: drummer.v1.ListPracticeSessionsRequest.start_date:type_name -> google.protobuf.Timestamp
	49, // 31: drummer.v1.ListPracticeSessionsRequest.end_date:type_name -> google.protobuf.Timestamp
	5,  // 32: drummer.v1.ListPracticeSessionsResponse.sessions:type_name -> drummer.v1.PracticeSession
	5,  // 33: drummer.v1.UpdatePracticeSessionRequest.session:type_name -> drummer.v1.PracticeSession
	50, // 34: drummer.v1.UpdatePracticeSessionRequest.update_mask:type_name -> google.protobuf.FieldMask
	49, // 35: drummer.v1.CreateExerciseHistoryRequest.start_time:type_name -> google.protobuf.Timestamp
	49, // 36: drummer.v1.CreateExerciseHistoryRequest.end_time:type_name -> google.protobuf.Timestamp
	49, // 37: drummer.v1.ListExerciseHistoryRequest.start_date:type_name -> google.protobuf.Timestamp
	49, // 38: drummer.v1.ListExerciseHistoryRequest.end_date:type_name -> google.protobuf.Timestamp
	6,  // 39: drummer.v1.ListExerciseHistoryResponse.history_entries:type_name -> drummer.v1.ExerciseHistory
	6,  // 40: drummer.v1.UpdateExerciseHistoryRequest.history:type_name -> drummer.v1.ExerciseHistory
	50, // 41: drummer.v1.UpdateExerciseHistoryRequest.update_mask:type_name -> google.protobuf.FieldMask
	49, // 42: drummer.v1.GetExerciseStatsRequest.start_date:type_name -> google.protobuf.Timestamp
	49, // 43: drummer.v1.GetExerciseStatsRequest.end_date:type_name -> google.protobuf.Timestamp
	43, // 44: drummer.v1.ExerciseStats.bpm_progress:type_name -> drummer.v1.BpmProgressPoint
	49, // 45: drummer.v1.BpmProgressPoint.date:type_name -> google.protobuf.Timestamp
	49, // 46: drummer.v1.GetPracticeStatsRequest.start_date:type_name -> google.protobuf.Timestamp
	49, // 47: drummer.v1.GetPracticeStatsRequest.end_date:type_name -> google.protobuf.Timestamp
	46, // 48: drummer.v1.PracticeStats.exercise_distribution:type_name -> drummer.v1.ExerciseTimeDistribution
	47, // 49: drummer.v1.PracticeStats.category_distribution:type_name -> drummer.v1.CategoryTimeDistribution
	48, // 50: drummer.v1.PracticeStats.practice_frequency:type_name -> drummer.v1.PracticeTimePoint
	48, // 51: drummer.v1.CategoryTimeDistribution.practice_frequency:type_name -> drummer.v1.PracticeTimePoint
	49, // 52: drummer.v1.PracticeTimePoint.date:type_name -> google.protobuf.Timestamp
	7,  // 53: drummer.v1.CategoryService.CreateCategory:input_type -> drummer.v1.CreateCategoryRequest
	8,  // 54: drummer.v1.CategoryService.GetCategory:input_type -> drummer.v1.GetCategoryRequest
	9,  // 55: drummer.v1.CategoryService.ListCategories:input_type -> drummer.v1.ListCategoriesRequest
	11, // 56: drummer.v1.CategoryService.UpdateCategory:input_type -> drummer.v1.UpdateCategoryRequest
	12, // 57: drummer.v1.CategoryService.DeleteCategory:input_type -> drummer.v1.DeleteCategoryRequest
	13, // 58: drummer.v1.TagService.CreateTag:input_type -> drummer.v1.CreateTagRequest
	14, // 59: drummer.v1.TagService.GetTag:input_type -> drummer.v1.GetTagRequest
	15, // 60: drummer.v1.TagService.ListTags:input_type -> drummer.v1.ListTagsRequest
	17, // 61: drummer.v1.TagService.UpdateTag:input_type -> drummer.v1.UpdateTagRequest
	18, // 62: drummer.v1.TagService.DeleteTag:input_type -> drummer.v1.DeleteTagRequest
	19, // 63: drummer.v1.ExerciseService.CreateExercise:input_type -> drummer.v1.CreateExerciseRequest
	20, // 64: drummer.v1.ExerciseService.GetExercise:input_type -> drummer.v1.GetExerciseRequest
	21, // 65: drummer.v1.ExerciseService.ListExercises:input_type -> drummer.v1.ListExercisesRequest
	23, // 66: drummer.v1.ExerciseService.UpdateExercise:input_type -> drummer.v1.UpdateExerciseRequest
	24, // 67: drummer.v1.ExerciseService.DeleteExercise:input_type -> drummer.v1.DeleteExerciseRequest
	25, // 68: drummer.v1.ExerciseService.AddExerciseImage:input_type -> drummer.v1.AddExerciseImageRequest
	26, // 69: drummer.v1.ExerciseService.DeleteExerciseImage:input_type -> drummer.v1.DeleteExerciseImageRequest
	27, // 70: drummer.v1.ExerciseService.AddExerciseLink:input_type -> drummer.v1.AddExerciseLinkRequest
	28, // 71: drummer.v1.ExerciseService.DeleteExerciseLink:input_type -> drummer.v1.DeleteExerciseLinkRequest
	41, // 72: drummer.v1.ExerciseService.GetExerciseStats:input_type -> drummer.v1.GetExerciseStatsRequest
	29, // 73: drummer.v1.PracticeSessionService.CreatePracticeSession:input_type -> drummer.v1.CreatePracticeSessionRequest
	30, // 74: drummer.v1.PracticeSessionService.GetPracticeSession:input_type -> drummer.v1.GetPracticeSessionRequest
	31, // 75: drummer.v1.PracticeSessionService.ListPracticeSessions:input_type -> drummer.v1.ListPracticeSessionsRequest
	33, // 76: drummer.v1.PracticeSessionService.UpdatePracticeSession:input_type -> drummer.v1.UpdatePracticeSessionRequest
	34, // 77: drummer.v1.PracticeSessionService.DeletePracticeSession:input_type -> drummer.v1.DeletePracticeSessionRequest
	44, // 78: drummer.v1.PracticeSessionService.GetPracticeStats:input_type -> drummer.v1.GetPracticeStatsRequest
	35, // 79: drummer.v1.ExerciseHistoryService.CreateExerciseHistory:input_type -> drummer.v1.CreateExerciseHistoryRequest
	36, // 80: drummer.v1.ExerciseHistoryService.GetExerciseHistory:input_type -> drummer.v1.GetExerciseHistoryRequest
	37, // 81: drummer.v1.ExerciseHistoryService.ListExerciseHistory:input_type -> drummer.v1.ListExerciseHistoryRequest
	39, // 82: drummer.v1.ExerciseHistoryService.UpdateExerciseHistory:input_type -> drummer.v1.UpdateExerciseHistoryRequest
	40, // 83: drummer.v1.ExerciseHistoryService.DeleteExerciseHistory:input_type -> drummer.v1.DeleteExerciseHistoryRequest
	0,  // 84: drummer.v1.CategoryService.CreateCategory:output_type -> drummer.v1.Category
	0,  // 85: drummer.v1.CategoryService.GetCategory:output_type -> drummer.v1.Category
	10, // 86: drummer.v1.CategoryService.ListCategories:output_type -> drummer.v1.ListCategoriesResponse
	0,  // 87: drummer.v1.CategoryService.UpdateCategory:output_type -> drummer.v1.Category
	51, // 88: drummer.v1.CategoryService.DeleteCategory:output_type -> google.protobuf.Empty
	1,  // 89: drummer.v1.TagService.CreateTag:output_type -> drummer.v1.Tag
	1,  // 90: drummer.v1.TagService.GetTag:output_type -> drummer.v1.Tag
	16, // 91: drummer.v1.TagService.ListTags:output_type -> drummer.v1.ListTagsResponse
	1,  // 92: drummer.v1.TagService.UpdateTag:output_type -> drummer.v1.Tag
	51, // 93: drummer.v1.TagService.DeleteTag:output_type -> google.protobuf.Empty
	2,  // 94: drummer.v1.ExerciseService.CreateExercise:output_type -> drummer.v1.Exercise
	2,  // 95: drummer.v1.ExerciseService.GetExercise:output_type -> drummer.v1.Exercise
	22, // 96: drummer.v1.ExerciseService.ListExercises:output_type -> drummer.v1.ListExercisesResponse
	2,  // 97: drummer.v1.ExerciseService.UpdateExercise:output_type -> drummer.v1.Exercise
	51, // 98: drummer.v1.ExerciseService.DeleteExercise:output_type -> google.protobuf.Empty
	3,  // 99: drummer.v1.ExerciseService.AddExerciseImage:output_type -> drummer.v1.ExerciseImage
	51, // 100: drummer.v1.ExerciseService.DeleteExerciseImage:output_type -> google.protobuf.Empty
	4,  // 101: drummer.v1.ExerciseService.AddExerciseLink:output_type -> drummer.v1.ExerciseLink
	51, // 102: drummer.v1.ExerciseService.DeleteExerciseLink:output_type -> google.protobuf.Empty
	42, // 103: drummer.v1.ExerciseService.GetExerciseStats:output_type -> drummer.v1.ExerciseStats
	5,  // 104: drummer.v1.PracticeSessionService.CreatePracticeSession:output_type -> drummer.v1.PracticeSession
	5,  // 105: drummer.v1.PracticeSessionService.GetPracticeSession:output_type -> drummer.v1.PracticeSession
	32, // 106: drummer.v1.PracticeSessionService.ListPracticeSessions:output_type -> drummer.v1.ListPracticeSessionsResponse
	5,  // 107: drummer.v1.PracticeSessionService.UpdatePracticeSession:output_type -> drummer.v1.PracticeSession
	51, // 108: drummer.v1.PracticeSessionService.DeletePracticeSession:output_type -> google.protobuf.Empty
	45, // 109: drummer.v1.PracticeSessionService.GetPracticeStats:output_type -> drummer.v1.PracticeStats
	6,  // 110: drummer.v1.ExerciseHistoryService.CreateExerciseHistory:output_type -> drummer.v1.ExerciseHistory
	6,  // 111: drummer.v1.ExerciseHistoryService.GetExerciseHistory:output_type -> drummer.v1.ExerciseHistory
	38, // 112: drummer.v1.ExerciseHistoryService.ListExerciseHistory:output_type -> drummer.v1.ListExerciseHistoryResponse
	6,  // 113: drummer.v1.ExerciseHistoryService.UpdateExerciseHistory:output_type -> drummer.v1.ExerciseHistory
	51, // 114: drummer.v1.ExerciseHistoryService.DeleteExerciseHistory:output_type -> google.protobuf.Empty
	84, // [84:115] is the sub-list for method output_type
	53, // [53:84] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_api_v1_tempus_tempus_proto_init() }
func file_api_v1_tempus_tempus_proto_init() {
	if File_api_v1_tempus_tempus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_tempus_tempus_proto_rawDesc), len(file_api_v1_tempus_tempus_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_api_v1_tempus_tempus_proto_goTypes,
		DependencyIndexes: file_api_v1_tempus_tempus_proto_depIdxs,
		MessageInfos:      file_api_v1_tempus_tempus_proto_msgTypes,
	}.Build()
	File_api_v1_tempus_tempus_proto = out.File
	file_api_v1_tempus_tempus_proto_goTypes = nil
	file_api_v1_tempus_tempus_proto_depIdxs = nil
}
