{"version":3,"file":"SessionDetailView-56fd1c11.js","sources":["../../src/views/sessions/SessionDetailView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Loading state -->\n    <div v-if=\"loading\" class=\"d-flex justify-center my-8\">\n      <v-progress-circular indeterminate color=\"primary\" size=\"64\"></v-progress-circular>\n    </div>\n\n    <!-- Error state -->\n    <v-alert v-else-if=\"error\" type=\"error\" class=\"my-4\">\n      {{ error }}\n    </v-alert>\n\n    <!-- Session details -->\n    <template v-else>\n      <div v-if=\"!sessionsStore.currentSession\">\n        <v-alert type=\"info\" class=\"my-4\">\n          Session not found. It may have been deleted.\n          <div class=\"mt-4\">\n            <v-btn color=\"primary\" to=\"/sessions\">\n              Back to Sessions\n            </v-btn>\n          </div>\n        </v-alert>\n      </div>\n      <template v-else>\n        <!-- Header section with actions -->\n        <v-row class=\"mb-4\">\n          <v-col cols=\"12\" sm=\"8\">\n            <v-btn\n              variant=\"text\"\n              to=\"/sessions\"\n              prepend-icon=\"mdi-arrow-left\"\n              class=\"mb-2\"\n            >\n              Back to Sessions\n            </v-btn>\n            <h1 class=\"text-h3\">Practice Session</h1>\n            <p class=\"text-body-1\">\n              {{ formatDate(sessionsStore.currentSession.startTime) }}\n            </p>\n          </v-col>\n          <v-col cols=\"12\" sm=\"4\" class=\"d-flex justify-end align-center\">\n            <v-btn\n              color=\"error\"\n              variant=\"outlined\"\n              prepend-icon=\"mdi-delete\"\n              class=\"mr-2\"\n              @click=\"confirmDelete\"\n            >\n              Delete\n            </v-btn>\n            <v-btn\n              color=\"primary\"\n              variant=\"flat\"\n              prepend-icon=\"mdi-pencil\"\n              @click=\"editSession\"\n            >\n              Edit\n            </v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- Session details card -->\n        <v-card class=\"mb-6\">\n          <v-card-text>\n            <v-row>\n              <v-col cols=\"12\" md=\"6\">\n                <div class=\"text-body-1 font-weight-medium mb-1\">Start Time</div>\n                <div class=\"text-body-2 mb-4\">{{ formatDateTime(sessionsStore.currentSession.startTime) }}</div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">End Time</div>\n                <div class=\"text-body-2 mb-4\">{{ formatDateTime(sessionsStore.currentSession.endTime) }}</div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">Duration</div>\n                <div class=\"text-body-2 mb-4\">{{ formatDuration(sessionsStore.currentSession.startTime, sessionsStore.currentSession.endTime) }}</div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">Notes</div>\n                <div class=\"text-body-2 mb-4\">{{ sessionsStore.currentSession.notes || 'No notes provided' }}</div>\n              </v-col>\n              \n              <v-col cols=\"12\" md=\"6\">\n                <div class=\"text-body-1 font-weight-medium mb-2\">Exercises</div>\n                <v-list v-if=\"sessionsStore.currentSession.exercises && sessionsStore.currentSession.exercises.length > 0\">\n                  <v-list-item\n                    v-for=\"exercise in sessionsStore.currentSession.exercises\"\n                    :key=\"exercise.id\"\n                    :to=\"`/exercises/${exercise.exerciseId}`\"\n                  >\n                    <v-list-item-title>{{ exercise.exercise ? exercise.exercise.name : `Exercise #${exercise.exerciseId}` }}</v-list-item-title>\n                    <v-list-item-subtitle>\n                      <span v-if=\"exercise.bpms\">{{ exercise.bpms.join(', ') }} BPM</span>\n                      <span v-if=\"exercise.timeSignature\" class=\"ml-2\">{{ exercise.timeSignature }}</span>\n                      <span v-if=\"exercise.notes\" class=\"d-block\">{{ exercise.notes }}</span>\n                    </v-list-item-subtitle>\n                  </v-list-item>\n                </v-list>\n                <div v-else class=\"text-body-2 mb-4 text-grey\">\n                  No exercises were recorded in this session\n                </div>\n              </v-col>\n            </v-row>\n          </v-card-text>\n        </v-card>\n\n        <!-- Exercise Details Cards -->\n        <h2 class=\"text-h5 mb-4\" v-if=\"sessionsStore.currentSession.exercises && sessionsStore.currentSession.exercises.length > 0\">\n          Exercise Details\n        </h2>\n        <v-row v-if=\"sessionsStore.currentSession.exercises && sessionsStore.currentSession.exercises.length > 0\">\n          <v-col \n            v-for=\"exercise in sessionsStore.currentSession.exercises\" \n            :key=\"exercise.id\"\n            cols=\"12\" \n            md=\"6\" \n            lg=\"4\"\n          >\n            <v-card variant=\"outlined\" class=\"mb-4\">\n              <v-card-title>\n                {{ exercise.exercise ? exercise.exercise.name : `Exercise #${exercise.exerciseId}` }}\n              </v-card-title>\n              <v-card-text>\n                <div class=\"d-flex mb-2\">\n                  <div class=\"text-body-2 font-weight-medium mr-4\">\n                    <v-icon icon=\"mdi-metronome\" size=\"small\" class=\"mr-1\"></v-icon>\n                    {{ exercise.bpms.join(', ') || 'N/A' }} BPM\n                  </div>\n                  <div class=\"text-body-2 font-weight-medium\">\n                    <v-icon icon=\"mdi-music\" size=\"small\" class=\"mr-1\"></v-icon>\n                    {{ exercise.timeSignature || '4/4' }}\n                  </div>\n                </div>\n                \n                <div class=\"text-body-2 font-weight-medium mb-1\">Duration</div>\n                <div class=\"text-body-2 mb-2\">{{ formatDuration(exercise.startTime, exercise.endTime) }}</div>\n                \n                <div class=\"text-body-2 font-weight-medium mb-1\">Notes</div>\n                <div class=\"text-body-2\">{{ exercise.notes || 'No notes provided' }}</div>\n                \n                <v-divider class=\"my-3\"></v-divider>\n                \n                <v-btn\n                  variant=\"text\"\n                  :to=\"`/exercises/${exercise.exerciseId}`\"\n                  color=\"primary\"\n                  size=\"small\"\n                >\n                  View Exercise Details\n                </v-btn>\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n      </template>\n    </template>\n\n    <!-- Delete Confirmation Dialog -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h5\">Delete Session</v-card-title>\n        <v-card-text>\n          Are you sure you want to delete this practice session? This action cannot be undone.\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey-darken-1\" variant=\"text\" @click=\"deleteDialog = false\">Cancel</v-btn>\n          <v-btn \n            color=\"error\" \n            variant=\"flat\" \n            @click=\"deleteSession\" \n            :loading=\"deleteLoading\"\n          >\n            Delete\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useSessionsStore } from '@/stores/sessions.js'\nimport { useAppStore } from '@/stores/app.js'\nimport { useCategoriesStore } from '@/stores/categories.js'\nimport CategoryChip from '@/components/categories/CategoryChip.vue'\n\nconst router = useRouter()\nconst route = useRoute()\nconst sessionsStore = useSessionsStore()\nconst appStore = useAppStore()\nconst categoriesStore = useCategoriesStore()\n\n// Data\nconst loading = ref(true)\nconst error = ref(null)\nconst deleteDialog = ref(false)\nconst deleteLoading = ref(false)\n\n// Computed\nconst sessionId = computed(() => parseInt(route.params.id))\n\n// Methods\nfunction formatDate(dateString) {\n  return appStore.formatDate(dateString)\n}\n\nfunction formatDateTime(dateString) {\n  return appStore.formatDateTime(dateString)\n}\n\nfunction formatDuration(startTime, endTime) {\n  return appStore.formatDuration(startTime, endTime)\n}\n\nfunction getCategoryById(categoryId) {\n  return categoriesStore.categoryById(categoryId)\n}\n\nfunction editSession() {\n  // Navigate to edit session page (to be implemented)\n  appStore.showInfoMessage('Session editing will be implemented in a future update')\n}\n\nfunction confirmDelete() {\n  deleteDialog.value = true\n}\n\nasync function deleteSession() {\n  deleteLoading.value = true\n  try {\n    await sessionsStore.deleteSession(sessionId.value)\n    appStore.showSuccessMessage('Practice session deleted successfully')\n    deleteDialog.value = false\n    router.push({ name: 'sessions' })\n  } catch (error) {\n    appStore.showErrorMessage(`Error deleting session: ${error.message}`)\n  } finally {\n    deleteLoading.value = false\n  }\n}\n\n// Load data\nasync function loadData() {\n  loading.value = true\n  error.value = null\n  \n  try {\n    await sessionsStore.fetchSession(sessionId.value)\n  } catch (err) {\n    console.error(`Error loading session: ${err.message}`, err)\n    error.value = `Error loading session: ${err.message}`\n  } finally {\n    loading.value = false\n  }\n}\n\n// Watch for route param changes to reload data\nwatch(() => route.params.id, () => {\n  loadData()\n})\n\n// Lifecycle\nonMounted(() => {\n  loadData()\n})\n</script>\n\n<style scoped>\n.font-weight-medium {\n  font-weight: 500;\n}\n</style>\n"],"names":["router","useRouter","route","useRoute","sessionsStore","useSessionsStore","appStore","useAppStore","useCategoriesStore","loading","ref","error","deleteDialog","deleteLoading","sessionId","computed","formatDate","dateString","formatDateTime","formatDuration","startTime","endTime","editSession","confirmDelete","deleteSession","loadData","err","watch","onMounted"],"mappings":"k8BA2LA,MAAMA,EAASC,EAAU,EACnBC,EAAQC,EAAS,EACjBC,EAAgBC,GAAiB,EACjCC,EAAWC,EAAY,EACLC,GAAmB,EAG3C,MAAMC,EAAUC,EAAI,EAAI,EAClBC,EAAQD,EAAI,IAAI,EAChBE,EAAeF,EAAI,EAAK,EACxBG,EAAgBH,EAAI,EAAK,EAGzBI,EAAYC,GAAS,IAAM,SAASb,EAAM,OAAO,EAAE,CAAC,EAG1D,SAASc,EAAWC,EAAY,CAC9B,OAAOX,EAAS,WAAWW,CAAU,CACvC,CAEA,SAASC,EAAeD,EAAY,CAClC,OAAOX,EAAS,eAAeW,CAAU,CAC3C,CAEA,SAASE,EAAeC,EAAWC,EAAS,CAC1C,OAAOf,EAAS,eAAec,EAAWC,CAAO,CACnD,CAMA,SAASC,GAAc,CAErBhB,EAAS,gBAAgB,wDAAwD,CACnF,CAEA,SAASiB,GAAgB,CACvBX,EAAa,MAAQ,EACvB,CAEA,eAAeY,GAAgB,CAC7BX,EAAc,MAAQ,GACtB,GAAI,CACF,MAAMT,EAAc,cAAcU,EAAU,KAAK,EACjDR,EAAS,mBAAmB,uCAAuC,EACnEM,EAAa,MAAQ,GACrBZ,EAAO,KAAK,CAAE,KAAM,UAAU,CAAE,CACjC,OAAQW,EAAO,CACdL,EAAS,iBAAiB,2BAA2BK,EAAM,OAAO,EAAE,CACxE,QAAY,CACRE,EAAc,MAAQ,EACxB,CACF,CAGA,eAAeY,GAAW,CACxBhB,EAAQ,MAAQ,GAChBE,EAAM,MAAQ,KAEd,GAAI,CACF,MAAMP,EAAc,aAAaU,EAAU,KAAK,CACjD,OAAQY,EAAK,CACZ,QAAQ,MAAM,0BAA0BA,EAAI,OAAO,GAAIA,CAAG,EAC1Df,EAAM,MAAQ,0BAA0Be,EAAI,OAAO,EACvD,QAAY,CACRjB,EAAQ,MAAQ,EAClB,CACF,CAGA,OAAAkB,GAAM,IAAMzB,EAAM,OAAO,GAAI,IAAM,CACjCuB,EAAS,CACX,CAAC,EAGDG,GAAU,IAAM,CACdH,EAAS,CACX,CAAC"}