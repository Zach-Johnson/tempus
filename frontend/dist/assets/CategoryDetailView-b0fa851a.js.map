{"version":3,"file":"CategoryDetailView-b0fa851a.js","sources":["../../src/views/categories/CategoryDetailView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Loading state -->\n    <div v-if=\"loading\" class=\"d-flex justify-center my-8\">\n      <v-progress-circular indeterminate color=\"primary\" size=\"64\"></v-progress-circular>\n    </div>\n\n    <!-- Error state -->\n    <v-alert v-else-if=\"error\" type=\"error\" class=\"my-4\">\n      {{ error }}\n    </v-alert>\n\n    <!-- Category details -->\n    <template v-else>\n      <div v-if=\"!categoriesStore.currentCategory\">\n        <v-alert type=\"info\" class=\"my-4\">\n          Category not found. It may have been deleted.\n          <div class=\"mt-4\">\n            <v-btn color=\"primary\" to=\"/categories\">\n              Back to Categories\n            </v-btn>\n          </div>\n        </v-alert>\n      </div>\n      <template v-else>\n        <!-- Header section with actions -->\n        <v-row class=\"mb-4\">\n          <v-col cols=\"12\" sm=\"8\">\n            <v-btn\n              variant=\"text\"\n              to=\"/categories\"\n              prepend-icon=\"mdi-arrow-left\"\n              class=\"mb-2\"\n            >\n              Back to Categories\n            </v-btn>\n            <h1 class=\"text-h3\">{{ categoriesStore.currentCategory.name }}</h1>\n          </v-col>\n          <v-col cols=\"12\" sm=\"4\" class=\"d-flex justify-end align-center\">\n            <v-btn\n              color=\"primary\"\n              variant=\"outlined\"\n              class=\"mr-2\"\n              prepend-icon=\"mdi-pencil\"\n              @click=\"openEditDialog\"\n            >\n              Edit\n            </v-btn>\n            <v-btn\n              color=\"error\"\n              variant=\"outlined\"\n              prepend-icon=\"mdi-delete\"\n              @click=\"confirmDelete\"\n            >\n              Delete\n            </v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- Category details card -->\n        <v-card class=\"mb-6\">\n          <v-card-text>\n            <v-row>\n              <v-col cols=\"12\" md=\"6\">\n                <div class=\"text-body-1 font-weight-medium mb-1\">Description</div>\n                <div class=\"text-body-2 mb-4\">{{ categoriesStore.currentCategory.description || 'No description provided' }}</div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">Created</div>\n                <div class=\"text-body-2 mb-4\">{{ formatDate(categoriesStore.currentCategory.created_at) }}</div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">Last Updated</div>\n                <div class=\"text-body-2\">{{ formatDate(categoriesStore.currentCategory.updated_at) }}</div>\n              </v-col>\n              <v-col cols=\"12\" md=\"6\">\n                <div class=\"d-flex align-center mb-2\">\n                  <div class=\"text-body-1 font-weight-medium\">Tags</div>\n                  <v-btn\n                    variant=\"text\"\n                    density=\"compact\"\n                    icon=\"mdi-plus\"\n                    size=\"small\"\n                    color=\"primary\"\n                    class=\"ml-2\"\n                    @click=\"goToTags\"\n                    title=\"Add tags\"\n                  ></v-btn>\n                </div>\n                <div v-if=\"loading\" class=\"d-flex align-center mb-4\">\n                  <v-progress-circular indeterminate size=\"20\" width=\"2\" class=\"mr-2\"></v-progress-circular>\n                  <span class=\"text-body-2\">Loading tags...</span>\n                </div>\n                <div v-else-if=\"categoryTags.length === 0\" class=\"text-body-2 mb-4 text-grey\">\n                  No tags associated with this category\n                </div>\n                <div v-else class=\"mb-4\">\n                  <tag-list :tags=\"categoryTags\" />\n                </div>\n              </v-col>\n            </v-row>\n          </v-card-text>\n        </v-card>\n\n        <!-- Exercises in this category -->\n        <h2 class=\"text-h5 mb-4\">Exercises in this Category</h2>\n        <v-card>\n          <v-card-text v-if=\"loadingExercises\">\n            <div class=\"d-flex justify-center py-4\">\n              <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n            </div>\n          </v-card-text>\n          \n          <v-card-text v-else-if=\"categoryExercises.length === 0\" class=\"text-center py-8\">\n            <v-icon icon=\"mdi-music-note-off\" size=\"64\" color=\"grey-lighten-1\" class=\"mb-4\"></v-icon>\n            <h3 class=\"text-h6 mb-2\">No exercises found</h3>\n            <p class=\"text-body-2 text-grey mb-4\">\n              This category doesn't have any exercises yet\n            </p>\n            <v-btn \n              color=\"primary\" \n              prepend-icon=\"mdi-plus\" \n              :to=\"{ name: 'exercises', query: { category: categoryId.value } }\"\n            >\n              Create Exercise\n            </v-btn>\n          </v-card-text>\n          \n          <template v-else>\n            <v-data-table\n              :headers=\"exerciseHeaders\"\n              :items=\"categoryExercises\"\n              :items-per-page=\"5\"\n            >\n              <template v-slot:item.actions=\"{ item }\">\n                <v-btn\n                  icon\n                  variant=\"text\"\n                  size=\"small\"\n                  color=\"primary\"\n                  :to=\"{ name: 'exercise-detail', params: { id: item.id }}\"\n                >\n                  <v-icon>mdi-eye</v-icon>\n                </v-btn>\n              </template>\n            </v-data-table>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn \n                color=\"primary\" \n                variant=\"text\"\n                :to=\"{ name: 'exercises', query: { category: categoryId.value } }\"\n              >\n                View All Exercises\n              </v-btn>\n            </v-card-actions>\n          </template>\n        </v-card>\n      </template>\n    </template>\n\n    <!-- Edit Dialog -->\n    <category-form-dialog\n      v-if=\"categoriesStore.currentCategory\"\n      v-model=\"dialogVisible\"\n      :category=\"categoriesStore.currentCategory\"\n      :is-edit=\"true\"\n      @save=\"saveCategory\"\n    />\n\n    <!-- Delete Confirmation Dialog -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h5\">Delete Category</v-card-title>\n        <v-card-text>\n          Are you sure you want to delete the category <strong>{{ categoriesStore.currentCategory?.name }}</strong>? \n          This will also remove it from all associated tags and exercises. This action cannot be undone.\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey-darken-1\" variant=\"text\" @click=\"deleteDialog = false\">Cancel</v-btn>\n          <v-btn \n            color=\"error\" \n            variant=\"flat\" \n            @click=\"deleteCategory\" \n            :loading=\"deleteLoading\"\n          >\n            Delete\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useCategoriesStore } from '@/stores/categories.js'\nimport { useTagsStore } from '@/stores/tags.js'\nimport { useExercisesStore } from '@/stores/exercises.js'\nimport { useAppStore } from '@/stores/app.js'\nimport { categoriesAPI } from '@/services/api.js'\nimport CategoryFormDialog from '@/components/categories/CategoryFormDialog.vue'\nimport TagList from '@/components/tags/TagList.vue'\n\nconst router = useRouter()\nconst route = useRoute()\nconst categoriesStore = useCategoriesStore()\nconst tagsStore = useTagsStore()\nconst exercisesStore = useExercisesStore()\nconst appStore = useAppStore()\n\n// Data\nconst loading = ref(true)\nconst loadingExercises = ref(true)\nconst error = ref(null)\nconst dialogVisible = ref(false)\nconst deleteDialog = ref(false)\nconst deleteLoading = ref(false)\n\n// Computed\nconst categoryId = computed(() => parseInt(route.params.id))\n\nconst category = computed(() => {\n  // First check if the category is already in the store\n  const categoryFromStore = categoriesStore.categoryById(categoryId.value)\n  \n  // Then check if we have a currentCategory from a direct fetch\n  const currentCategory = categoriesStore.currentCategory\n  \n  // Return the category if it's found in either place\n  if (categoryFromStore) {\n    return categoryFromStore\n  } else if (currentCategory && currentCategory.id === categoryId.value) {\n    return currentCategory\n  }\n  \n  return null\n})\n\nconst categoryTags = computed(() => {\n  return tagsStore.tagsByCategory(categoryId.value) || []\n})\n\nconst categoryExercises = computed(() => {\n  return exercisesStore.exercisesByCategory(categoryId.value) || []\n})\n\n// Table headers\nconst exerciseHeaders = [\n  { title: 'Name', key: 'name' },\n  { title: 'Description', key: 'description' },\n  { title: 'Actions', key: 'actions', sortable: false, align: 'end' }\n]\n\n// Methods\nfunction formatDate(dateString) {\n  return appStore.formatDate(dateString)\n}\n\nfunction openEditDialog() {\n  dialogVisible.value = true\n}\n\nfunction goToTags() {\n  router.push({ name: 'tags', query: { category: categoryId.value } })\n}\n\nasync function saveCategory(categoryData) {\n  try {\n    await categoriesStore.updateCategory(categoryId.value, categoryData, 'name,description')\n    appStore.showSuccessMessage(`Category \"${categoryData.name}\" updated successfully`)\n    dialogVisible.value = false\n  } catch (error) {\n    appStore.showErrorMessage(`Error updating category: ${error.message}`)\n  }\n}\n\nfunction confirmDelete() {\n  deleteDialog.value = true\n}\n\nasync function deleteCategory() {\n  deleteLoading.value = true\n  try {\n    await categoriesStore.deleteCategory(categoryId.value)\n    appStore.showSuccessMessage(`Category \"${categoriesStore.currentCategory.name}\" deleted successfully`)\n    deleteDialog.value = false\n    router.push({ name: 'categories' })\n  } catch (error) {\n    appStore.showErrorMessage(`Error deleting category: ${error.message}`)\n  } finally {\n    deleteLoading.value = false\n  }\n}\n\n// Load data\nasync function loadData() {\n  loading.value = true\n  error.value = null\n  \n  try {\n    // console.log(`Loading category with ID: ${categoryId.value}`)\n    \n    // Always fetch the category to ensure we have the latest data\n    const fetchedCategory = await categoriesStore.fetchCategory(categoryId.value)\n    // console.log('Fetched category:', fetchedCategory)\n    // console.log('Current category from store:', categoriesStore.currentCategory)\n    \n    // If the category is still not found after fetching, show an error\n    if (!categoriesStore.currentCategory) {\n      console.warn(`Category with ID ${categoryId.value} not found after fetching`)\n      error.value = `Category with ID ${categoryId.value} could not be found`\n    } else {\n      // console.log('Category found:', categoriesStore.currentCategory)\n    }\n    \n    if (tagsStore.tags.length === 0) {\n      await tagsStore.fetchTags()\n    }\n  } catch (err) {\n    console.error(`Error loading category: ${err.message}`, err)\n    error.value = `Error loading category: ${err.message}`\n  } finally {\n    loading.value = false\n  }\n  \n  loadingExercises.value = true\n  try {\n    if (exercisesStore.exercises.length === 0) {\n      await exercisesStore.fetchExercises({ categoryId: categoryId.value })\n    }\n  } catch (err) {\n    console.error('Error loading exercises:', err)\n  } finally {\n    loadingExercises.value = false\n  }\n  // console.log(\"finished loading data\")\n}\n\n// Watch for route param changes to reload data\nwatch(() => route.params.id, () => {\n  loadData()\n})\n\n// Lifecycle\nonMounted(async () => {\n  await loadData()\n  \n  // One final check to force a direct category load if still not found\n  if (!categoriesStore.currentCategory && categoryId.value) {\n    try {\n      // Try to manually get the category by ID\n      const response = await categoriesAPI.get(categoryId.value)\n      const manualCategory = response.data\n      \n      // Force update the store\n      categoriesStore.$patch(state => {\n        state.currentCategory = manualCategory\n        \n        const index = state.categories.findIndex(c => c.id === categoryId.value)\n        if (index !== -1) {\n          state.categories[index] = manualCategory\n        } else {\n          state.categories.push(manualCategory)\n        }\n      })\n      \n      console.log('Manually loaded category:', manualCategory)\n    } catch (err) {\n      console.error('Final attempt to load category failed:', err)\n    }\n  }\n})\n</script>\n"],"names":["router","useRouter","route","useRoute","categoriesStore","useCategoriesStore","tagsStore","useTagsStore","exercisesStore","useExercisesStore","appStore","useAppStore","loading","ref","loadingExercises","error","dialogVisible","deleteDialog","deleteLoading","categoryId","computed","categoryFromStore","currentCategory","categoryTags","categoryExercises","exerciseHeaders","formatDate","dateString","openEditDialog","goToTags","saveCategory","categoryData","confirmDelete","deleteCategory","loadData","fetchedCategory","err","watch","onMounted","manualCategory","categoriesAPI","state","index"],"mappings":"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"}