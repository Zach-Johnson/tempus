{"version":3,"file":"TagList-1937b14f.js","sources":["../../src/components/tags/TagList.vue"],"sourcesContent":["<template>\n  <div class=\"tag-list\">\n    <div v-if=\"loading\" class=\"d-flex align-center\">\n      <v-progress-circular indeterminate size=\"20\" width=\"2\" color=\"primary\" class=\"mr-2\"></v-progress-circular>\n      <span class=\"text-body-2\">Loading tags...</span>\n    </div>\n    \n    <div v-else-if=\"!tags || tags.length === 0\" class=\"text-body-2 text-grey\">\n      {{ noTagsMessage }}\n    </div>\n    \n    <div v-else class=\"tag-list-container\">\n      <tag-chip\n        v-for=\"tag in tags\"\n        :key=\"tag.id\"\n        :tag=\"tag\"\n        :color=\"color\"\n        :variant=\"variant\"\n        :size=\"size\"\n        :closable=\"selectable && modelValue && modelValue.includes(tag.id)\"\n        :clickable=\"selectable\"\n        :disable-navigation=\"disableNavigation\"\n        @click=\"toggleTag(tag)\"\n        @close=\"removeTag(tag)\"\n      ></tag-chip>\n      \n      <div v-if=\"showAddButton && selectable\" class=\"d-inline-block\">\n        <v-btn\n          variant=\"outlined\"\n          :size=\"size\"\n          icon\n          class=\"tag-add-btn\"\n          @click=\"openTagSelect\"\n        >\n          <v-icon>mdi-plus</v-icon>\n        </v-btn>\n      </div>\n    </div>\n    \n    <!-- Tag Selection Dialog -->\n    <v-dialog v-model=\"tagSelectDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title>Add Tags</v-card-title>\n        <v-card-text>\n          <v-text-field\n            v-model=\"tagSearch\"\n            label=\"Search tags\"\n            variant=\"outlined\"\n            density=\"compact\"\n            prepend-inner-icon=\"mdi-magnify\"\n            clearable\n            class=\"mb-4\"\n          ></v-text-field>\n          \n          <v-list v-if=\"availableTags.length > 0\" density=\"compact\">\n            <v-list-item\n              v-for=\"tag in filteredAvailableTags\"\n              :key=\"tag.id\"\n              :value=\"tag.id\"\n              @click=\"addTag(tag)\"\n            >\n              <template v-slot:prepend>\n                <v-checkbox-btn\n                  :model-value=\"isTagSelected(tag)\"\n                  color=\"primary\"\n                ></v-checkbox-btn>\n              </template>\n              <v-list-item-title>{{ tag.name }}</v-list-item-title>\n            </v-list-item>\n          </v-list>\n          \n          <div v-else class=\"text-center py-4\">\n            <p class=\"text-body-2 text-grey\">No tags available</p>\n          </div>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn \n            color=\"primary\" \n            variant=\"text\" \n            @click=\"tagSelectDialog = false\"\n          >\n            Close\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { useTagsStore } from '@/stores/tags.js'\nimport TagChip from './TagChip.vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: Array,\n    default: () => []\n  },\n  tags: {\n    type: Array,\n    default: () => []\n  },\n  categoryId: {\n    type: [Number, String],\n    default: null\n  },\n  color: {\n    type: String,\n    default: 'primary'\n  },\n  variant: {\n    type: String,\n    default: 'tonal'\n  },\n  size: {\n    type: String,\n    default: 'small'\n  },\n  selectable: {\n    type: Boolean,\n    default: false\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  noTagsMessage: {\n    type: String,\n    default: 'No tags'\n  },\n  showAddButton: {\n    type: Boolean,\n    default: true\n  },\n  disableNavigation: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'add', 'remove'])\nconst tagsStore = useTagsStore()\n\n// Data\nconst tagSelectDialog = ref(false)\nconst tagSearch = ref('')\n\n// Computed\nconst availableTags = computed(() => {\n  // If we have a category filter, get tags for that category\n  if (props.categoryId) {\n    return tagsStore.tagsByCategory(parseInt(props.categoryId))\n  }\n  \n  // Otherwise, get all tags\n  return tagsStore.tagsSorted\n})\n\nconst filteredAvailableTags = computed(() => {\n  if (!tagSearch.value) return availableTags.value\n  \n  const search = tagSearch.value.toLowerCase()\n  return availableTags.value.filter(tag => \n    tag.name.toLowerCase().includes(search)\n  )\n})\n\nconst selectedTags = computed(() => {\n  if (!props.modelValue) return []\n  \n  // Convert tag IDs to tag objects\n  return props.modelValue\n    .map(tagId => {\n      const tag = tagsStore.tagById(tagId)\n      return tag || null\n    })\n    .filter(tag => tag !== null)\n})\n\n// Methods\nfunction isTagSelected(tag) {\n  return props.modelValue && props.modelValue.includes(tag.id)\n}\n\nfunction openTagSelect() {\n  tagSearch.value = ''\n  tagSelectDialog.value = true\n}\n\nfunction toggleTag(tag) {\n  if (!props.selectable) return\n  \n  if (isTagSelected(tag)) {\n    removeTag(tag)\n  } else {\n    addTag(tag)\n  }\n}\n\nfunction addTag(tag) {\n  if (!props.selectable) return\n  \n  // Skip if already selected\n  if (isTagSelected(tag)) return\n  \n  const newValue = [...(props.modelValue || []), tag.id]\n  emit('update:modelValue', newValue)\n  emit('add', tag)\n}\n\nfunction removeTag(tag) {\n  if (!props.selectable) return\n  \n  const newValue = (props.modelValue || []).filter(id => id !== tag.id)\n  emit('update:modelValue', newValue)\n  emit('remove', tag)\n}\n\n// Fetch tags if needed\nonMounted(async () => {\n  if (tagsStore.tags.length === 0) {\n    await tagsStore.fetchTags()\n  }\n})\n</script>\n\n<style scoped>\n.tag-list-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.tag-add-btn {\n  margin-right: 4px;\n  margin-bottom: 4px;\n}\n</style>\n"],"names":["props","__props","emit","__emit","tagsStore","useTagsStore","tagSelectDialog","ref","tagSearch","availableTags","computed","filteredAvailableTags","search","tag","tagId","isTagSelected","openTagSelect","toggleTag","removeTag","addTag","newValue","id","onMounted"],"mappings":"+7BA+FA,MAAMA,EAAQC,EA+CRC,EAAOC,EACPC,EAAYC,EAAa,EAGzBC,EAAkBC,EAAI,EAAK,EAC3BC,EAAYD,EAAI,EAAE,EAGlBE,EAAgBC,EAAS,IAEzBV,EAAM,WACDI,EAAU,eAAe,SAASJ,EAAM,UAAU,CAAC,EAIrDI,EAAU,UAClB,EAEKO,EAAwBD,EAAS,IAAM,CAC3C,GAAI,CAACF,EAAU,MAAO,OAAOC,EAAc,MAE3C,MAAMG,EAASJ,EAAU,MAAM,YAAY,EAC3C,OAAOC,EAAc,MAAM,OAAOI,GAChCA,EAAI,KAAK,cAAc,SAASD,CAAM,CACxC,CACF,CAAC,EAEoBF,EAAS,IACvBV,EAAM,WAGJA,EAAM,WACV,IAAIc,GACSV,EAAU,QAAQU,CAAK,GACrB,IACf,EACA,OAAOD,GAAOA,IAAQ,IAAI,EARC,CAAC,CAShC,EAGD,SAASE,EAAcF,EAAK,CAC1B,OAAOb,EAAM,YAAcA,EAAM,WAAW,SAASa,EAAI,EAAE,CAC7D,CAEA,SAASG,GAAgB,CACvBR,EAAU,MAAQ,GAClBF,EAAgB,MAAQ,EAC1B,CAEA,SAASW,EAAUJ,EAAK,CACjBb,EAAM,aAEPe,EAAcF,CAAG,EACnBK,EAAUL,CAAG,EAEbM,EAAON,CAAG,EAEd,CAEA,SAASM,EAAON,EAAK,CAInB,GAHI,CAACb,EAAM,YAGPe,EAAcF,CAAG,EAAG,OAExB,MAAMO,EAAW,CAAC,GAAIpB,EAAM,YAAc,GAAKa,EAAI,EAAE,EACrDX,EAAK,oBAAqBkB,CAAQ,EAClClB,EAAK,MAAOW,CAAG,CACjB,CAEA,SAASK,EAAUL,EAAK,CACtB,GAAI,CAACb,EAAM,WAAY,OAEvB,MAAMoB,GAAYpB,EAAM,YAAc,CAAA,GAAI,OAAOqB,GAAMA,IAAOR,EAAI,EAAE,EACpEX,EAAK,oBAAqBkB,CAAQ,EAClClB,EAAK,SAAUW,CAAG,CACpB,CAGA,OAAAS,EAAU,SAAY,CAChBlB,EAAU,KAAK,SAAW,GAC5B,MAAMA,EAAU,UAAU,CAE9B,CAAC"}