{"version":3,"file":"ExerciseDetailView-6659fcc5.js","sources":["../../src/components/categories/CategoryList.vue","../../src/views/exercises/ExerciseDetailView.vue"],"sourcesContent":["<template>\n  <div class=\"category-list\">\n    <div v-if=\"loading\" class=\"d-flex align-center\">\n      <v-progress-circular indeterminate size=\"20\" width=\"2\" color=\"primary\" class=\"mr-2\"></v-progress-circular>\n      <span class=\"text-body-2\">Loading categories...</span>\n    </div>\n    \n    <div v-else-if=\"!categories || categories.length === 0\" class=\"text-body-2 text-grey\">\n      {{ noCategoriesMessage }}\n    </div>\n    \n    <div v-else class=\"category-list-container\">\n      <category-chip\n        v-for=\"category in categories\"\n        :key=\"category.id\"\n        :category=\"category\"\n        :color=\"color\"\n        :variant=\"variant\"\n        :size=\"size\"\n        :closable=\"selectable && modelValue && modelValue.includes(category.id)\"\n        :clickable=\"selectable\"\n        :disable-navigation=\"disableNavigation\"\n        @click=\"toggleCategory(category)\"\n        @close=\"removeCategory(category)\"\n      ></category-chip>\n      \n      <div v-if=\"showAddButton && selectable\" class=\"d-inline-block\">\n        <v-btn\n          variant=\"outlined\"\n          :size=\"size\"\n          icon\n          class=\"category-add-btn\"\n          @click=\"openCategorySelect\"\n        >\n          <v-icon>mdi-plus</v-icon>\n        </v-btn>\n      </div>\n    </div>\n    \n    <!-- Category Selection Dialog -->\n    <v-dialog v-model=\"categorySelectDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title>Add Categories</v-card-title>\n        <v-card-text>\n          <v-text-field\n            v-model=\"categorySearch\"\n            label=\"Search categories\"\n            variant=\"outlined\"\n            density=\"compact\"\n            prepend-inner-icon=\"mdi-magnify\"\n            clearable\n            class=\"mb-4\"\n          ></v-text-field>\n          \n          <v-list v-if=\"availableCategories.length > 0\" density=\"compact\">\n            <v-list-item\n              v-for=\"category in filteredAvailableCategories\"\n              :key=\"category.id\"\n              :value=\"category.id\"\n              @click=\"addCategory(category)\"\n            >\n              <template v-slot:prepend>\n                <v-checkbox-btn\n                  :model-value=\"isCategorySelected(category)\"\n                  color=\"primary\"\n                ></v-checkbox-btn>\n              </template>\n              <v-list-item-title>{{ category.name }}</v-list-item-title>\n              <v-list-item-subtitle v-if=\"category.description\">\n                {{ truncateText(category.description, 60) }}\n              </v-list-item-subtitle>\n            </v-list-item>\n          </v-list>\n          \n          <div v-else class=\"text-center py-4\">\n            <p class=\"text-body-2 text-grey mb-4\">No categories available</p>\n            <v-btn \n              color=\"primary\"\n              prepend-icon=\"mdi-plus\"\n              @click=\"openCreateDialog\"\n            >\n              Create New Category\n            </v-btn>\n          </div>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn \n            color=\"primary\" \n            variant=\"text\" \n            @click=\"categorySelectDialog = false\"\n          >\n            Close\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    \n    <!-- Create Category Dialog -->\n    <category-form-dialog\n      v-model=\"createDialogVisible\"\n      :category=\"{ name: '', description: '' }\"\n      :is-edit=\"false\"\n      @save=\"createCategory\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { useCategoriesStore } from '@/stores/categories.js'\nimport { useAppStore } from '@/stores/app.js'\nimport CategoryChip from './CategoryChip.vue'\nimport CategoryFormDialog from './CategoryFormDialog.vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: Array,\n    default: () => []\n  },\n  categories: {\n    type: Array,\n    default: () => []\n  },\n  color: {\n    type: String,\n    default: 'secondary'\n  },\n  variant: {\n    type: String,\n    default: 'tonal'\n  },\n  size: {\n    type: String,\n    default: 'small'\n  },\n  selectable: {\n    type: Boolean,\n    default: false\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  },\n  noCategoriesMessage: {\n    type: String,\n    default: 'No categories'\n  },\n  showAddButton: {\n    type: Boolean,\n    default: true\n  },\n  disableNavigation: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'add', 'remove', 'category-created'])\nconst categoriesStore = useCategoriesStore()\nconst appStore = useAppStore()\n\n// Data\nconst categorySelectDialog = ref(false)\nconst createDialogVisible = ref(false)\nconst categorySearch = ref('')\n\n// Computed\nconst availableCategories = computed(() => {\n  // Get all categories from the store\n  return categoriesStore.categoriesSorted\n})\n\nconst filteredAvailableCategories = computed(() => {\n  if (!categorySearch.value) return availableCategories.value\n  \n  const search = categorySearch.value.toLowerCase()\n  return availableCategories.value.filter(category => \n    category.name.toLowerCase().includes(search) ||\n    (category.description && category.description.toLowerCase().includes(search))\n  )\n})\n\nconst selectedCategories = computed(() => {\n  if (!props.modelValue) return []\n  \n  // Convert category IDs to category objects\n  return props.modelValue\n    .map(categoryId => {\n      const category = categoriesStore.categoryById(categoryId)\n      return category || null\n    })\n    .filter(category => category !== null)\n})\n\n// Methods\nfunction truncateText(text, maxLength) {\n  if (!text) return ''\n  return text.length > maxLength \n    ? text.substring(0, maxLength) + '...' \n    : text\n}\n\nfunction isCategorySelected(category) {\n  return props.modelValue && props.modelValue.includes(category.id)\n}\n\nfunction openCategorySelect() {\n  categorySearch.value = ''\n  categorySelectDialog.value = true\n}\n\nfunction openCreateDialog() {\n  categorySelectDialog.value = false\n  createDialogVisible.value = true\n}\n\nfunction toggleCategory(category) {\n  if (!props.selectable) return\n  \n  if (isCategorySelected(category)) {\n    removeCategory(category)\n  } else {\n    addCategory(category)\n  }\n}\n\nfunction addCategory(category) {\n  if (!props.selectable) return\n  \n  // Skip if already selected\n  if (isCategorySelected(category)) return\n  \n  const newValue = [...(props.modelValue || []), category.id]\n  emit('update:modelValue', newValue)\n  emit('add', category)\n}\n\nfunction removeCategory(category) {\n  if (!props.selectable) return\n  \n  const newValue = (props.modelValue || []).filter(id => id !== category.id)\n  emit('update:modelValue', newValue)\n  emit('remove', category)\n}\n\nasync function createCategory(categoryData) {\n  try {\n    const newCategory = await categoriesStore.createCategory(categoryData)\n    appStore.showSuccessMessage(`Category \"${categoryData.name}\" created successfully`)\n    createDialogVisible.value = false\n    \n    // Add the new category to the selection\n    if (props.selectable) {\n      addCategory(newCategory)\n    }\n    \n    emit('category-created', newCategory)\n  } catch (error) {\n    appStore.showErrorMessage(`Error creating category: ${error.message}`)\n  }\n}\n\n// Fetch categories if needed\nonMounted(async () => {\n  if (categoriesStore.categories.length === 0) {\n    await categoriesStore.fetchCategories()\n  }\n})\n</script>\n\n<style scoped>\n.category-list-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.category-add-btn {\n  margin-right: 4px;\n  margin-bottom: 4px;\n}\n</style>\n","<template>\n  <div>\n    <!-- Loading state -->\n    <div v-if=\"loading\" class=\"d-flex justify-center my-8\">\n      <v-progress-circular indeterminate color=\"primary\" size=\"64\"></v-progress-circular>\n    </div>\n\n    <!-- Error state -->\n    <v-alert v-else-if=\"error\" type=\"error\" class=\"my-4\">\n      {{ error }}\n    </v-alert>\n\n    <!-- Exercise details -->\n    <template v-else>\n      <div v-if=\"!exercisesStore.currentExercise\">\n        <v-alert type=\"info\" class=\"my-4\">\n          Exercise not found. It may have been deleted.\n          <div class=\"mt-4\">\n            <v-btn color=\"primary\" to=\"/exercises\">\n              Back to Exercises\n            </v-btn>\n          </div>\n        </v-alert>\n      </div>\n      <template v-else>\n        <!-- Header section with actions -->\n        <v-row class=\"mb-4\">\n          <v-col cols=\"12\" sm=\"8\">\n            <v-btn\n              variant=\"text\"\n              to=\"/exercises\"\n              prepend-icon=\"mdi-arrow-left\"\n              class=\"mb-2\"\n            >\n              Back to Exercises\n            </v-btn>\n            <h1 class=\"text-h3\">{{ exercisesStore.currentExercise.name }}</h1>\n          </v-col>\n          <v-col cols=\"12\" sm=\"4\" class=\"d-flex justify-end align-center\">\n            <v-btn\n              color=\"primary\"\n              variant=\"outlined\"\n              class=\"mr-2\"\n              prepend-icon=\"mdi-pencil\"\n              @click=\"openEditDialog\"\n            >\n              Edit\n            </v-btn>\n            <v-btn\n              color=\"primary\"\n              variant=\"flat\"\n              prepend-icon=\"mdi-play\"\n              @click=\"startPractice\"\n            >\n              Practice Now\n            </v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- Exercise details card -->\n        <v-card class=\"mb-6\">\n          <v-card-text>\n            <v-row>\n              <v-col cols=\"12\" md=\"6\">\n                <div class=\"text-body-1 font-weight-medium mb-1\">Description</div>\n                <div class=\"text-body-2 mb-4\">{{ exercisesStore.currentExercise.description || 'No description provided' }}</div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">Categories</div>\n                <div v-if=\"exerciseCategories.length === 0\" class=\"text-body-2 mb-4 text-grey\">\n                  No categories assigned\n                </div>\n                <div v-else class=\"mb-4\">\n                  <category-list :categories=\"exerciseCategories\" />\n                </div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">Tags</div>\n                <div v-if=\"exerciseTags.length === 0\" class=\"text-body-2 mb-4 text-grey\">\n                  No tags assigned\n                </div>\n                <div v-else class=\"mb-4\">\n                  <tag-list :tags=\"exerciseTags\" />\n                </div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">Created</div>\n                <div class=\"text-body-2 mb-4\">{{ formatDate(exercisesStore.currentExercise.createdAt) }}</div>\n                \n                <div class=\"text-body-1 font-weight-medium mb-1\">Last Updated</div>\n                <div class=\"text-body-2\">{{ formatDate(exercisesStore.currentExercise.updatedAt) }}</div>\n              </v-col>\n              \n              <v-col cols=\"12\" md=\"6\">\n                <div class=\"text-body-1 font-weight-medium mb-1\">External Resources</div>\n                \n                <div v-if=\"!exercisesStore.currentExercise.links || exercisesStore.currentExercise.links.length === 0\" class=\"text-body-2 mb-4 text-grey\">\n                  No external resources available\n                </div>\n                \n                <v-list v-else density=\"compact\" class=\"mb-4\">\n                  <v-list-item \n                    v-for=\"(link, index) in exercisesStore.currentExercise.links\" \n                    :key=\"index\"\n                  >\n                    <template v-slot:prepend>\n                      <v-icon icon=\"mdi-link\" size=\"small\"></v-icon>\n                    </template>\n                    \n                    <v-list-item-title>\n                      <a :href=\"link.url\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        {{ link.description || link.url }}\n                      </a>\n                    </v-list-item-title>\n                  </v-list-item>\n                </v-list>\n                \n                <!-- Add resource button -->\n                <div class=\"d-flex justify-end mt-2\">\n                  <v-btn\n                    size=\"small\"\n                    prepend-icon=\"mdi-plus\"\n                    @click=\"openAddResourceDialog\"\n                  >\n                    Add Resource\n                  </v-btn>\n                </div>\n              </v-col>\n            </v-row>\n          </v-card-text>\n        </v-card>\n        \n        <!-- Practice Statistics Card -->\n        <v-row>\n          <v-col cols=\"12\">\n            <v-card>\n              <v-card-title class=\"d-flex align-center\">\n                Practice Statistics\n                <v-spacer></v-spacer>\n                <v-btn\n                  variant=\"text\"\n                  prepend-icon=\"mdi-refresh\"\n                  @click=\"loadStats\"\n                  :loading=\"statsLoading\"\n                >\n                  Refresh\n                </v-btn>\n              </v-card-title>\n              \n              <v-card-text v-if=\"statsLoading\">\n                <div class=\"d-flex justify-center py-4\">\n                  <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n                </div>\n              </v-card-text>\n              \n              <template v-else-if=\"exerciseStats\">\n                <v-card-text>\n                  <v-row>\n                    <v-col cols=\"12\" sm=\"6\" md=\"3\">\n                      <div class=\"text-h4 text-center primary--text\">{{ exerciseStats.practiceCount }}</div>\n                      <div class=\"text-body-2 text-center\">Times Practiced</div>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"3\">\n                      <div class=\"text-h4 text-center primary--text\">{{ formatTime(exerciseStats.totalPracticeDurationSeconds / 60) }}</div>\n                      <div class=\"text-body-2 text-center\">Total Practice Time</div>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"3\">\n                      <div class=\"text-h4 text-center primary--text\">{{ exerciseStats.maxBpm || 'N/A' }}</div>\n                      <div class=\"text-body-2 text-center\">Max BPM</div>\n                    </v-col>\n                    <v-col cols=\"12\" sm=\"6\" md=\"3\">\n                      <div class=\"text-h4 text-center primary--text\">{{ exerciseStats.avgRating ? exerciseStats.avgRating.toFixed(1) : 'N/A' }}</div>\n                      <div class=\"text-body-2 text-center\">Average Rating</div>\n                    </v-col>\n                  </v-row>\n                  \n                  <!-- BPM Progress Chart will be added here when we have data -->\n                </v-card-text>\n              </template>\n              \n              <v-card-text v-else class=\"text-center py-6\">\n                <v-icon icon=\"mdi-chart-timeline-variant\" size=\"64\" color=\"grey-lighten-1\" class=\"mb-4\"></v-icon>\n                <h3 class=\"text-h6 mb-2\">No practice data available</h3>\n                <p class=\"text-body-2 text-grey mb-4\">\n                  Start practicing this exercise to collect statistics\n                </p>\n                <v-btn \n                  color=\"primary\"\n                  prepend-icon=\"mdi-play\"\n                  @click=\"startPractice\"\n                >\n                  Practice Now\n                </v-btn>\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n        \n        <!-- Recent Practice Sessions -->\n        <v-row class=\"mt-4\">\n          <v-col cols=\"12\">\n            <v-card>\n              <v-card-title>\n                Recent Practice Sessions\n                <v-spacer></v-spacer>\n                <v-btn\n                  variant=\"text\"\n                  to=\"/sessions\"\n                  :disabled=\"!hasRecentSessions\"\n                >\n                  View All\n                </v-btn>\n              </v-card-title>\n              \n              <v-list v-if=\"recentSessions.length > 0\">\n                <v-list-item \n                  v-for=\"session in recentSessions\" \n                  :key=\"session.id\" \n                  :to=\"`/sessions/${session.id}`\">\n                  <v-list-item-title>{{ formatDate(session.startTime) }}</v-list-item-title>\n                  <v-list-item-subtitle>\n                    {{ formatDuration(session.startTime, session.endTime) }}\n                    <span v-if=\"session.bpm\" class=\"ml-2\">{{ session.bpm }} BPM</span>\n                  </v-list-item-subtitle>\n                </v-list-item>\n              </v-list>\n              \n              <v-card-text v-else class=\"text-center py-6\">\n                <p class=\"text-body-2 text-grey\">No recent practice sessions</p>\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n      </template>\n    </template>\n    \n    <!-- Edit Dialog -->\n    <exercise-form-dialog\n      v-if=\"exercisesStore.currentExercise\"\n      v-model=\"dialogVisible\"\n      :exercise=\"exercisesStore.currentExercise\"\n      :is-edit=\"true\"\n      @save=\"saveExercise\"\n    />\n    \n    <!-- Add Resource Dialog -->\n    <v-dialog v-model=\"resourceDialog\" max-width=\"600\">\n      <v-card>\n        <v-card-title>Add External Resource</v-card-title>\n        <v-card-text>\n          <v-form ref=\"resourceForm\" @submit.prevent=\"saveResource\" v-model=\"resourceFormValid\">\n            <v-text-field\n              v-model=\"resourceData.url\"\n              label=\"URL\"\n              :rules=\"urlRules\"\n              required\n              variant=\"outlined\"\n              placeholder=\"https://example.com\"\n              class=\"mb-4\"\n            ></v-text-field>\n            \n            <v-text-field\n              v-model=\"resourceData.description\"\n              label=\"Description\"\n              variant=\"outlined\"\n              placeholder=\"Description of the resource (optional)\"\n            ></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey-darken-1\" variant=\"text\" @click=\"resourceDialog = false\">Cancel</v-btn>\n          <v-btn \n            color=\"primary\" \n            variant=\"flat\" \n            @click=\"saveResource\"\n            :disabled=\"!resourceFormValid\"\n            :loading=\"addingResource\"\n          >\n            Add\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useExercisesStore } from '@/stores/exercises.js'\nimport { useCategoriesStore } from '@/stores/categories.js'\nimport { useTagsStore } from '@/stores/tags.js'\nimport { useAppStore } from '@/stores/app.js'\nimport { useSessionsStore } from '@/stores/sessions.js'\nimport ExerciseFormDialog from '@/components/exercises/ExerciseFormDialog.vue'\nimport CategoryList from '@/components/categories/CategoryList.vue'\nimport TagList from '@/components/tags/TagList.vue'\n\nconst router = useRouter()\nconst route = useRoute()\nconst exercisesStore = useExercisesStore()\nconst categoriesStore = useCategoriesStore()\nconst tagsStore = useTagsStore()\nconst appStore = useAppStore()\nconst sessionsStore = useSessionsStore()\n\n// Data\nconst loading = ref(true)\nconst error = ref(null)\nconst dialogVisible = ref(false)\nconst statsLoading = ref(false)\nconst exerciseStats = ref(null)\nconst recentSessions = ref([])\n\n// Add Resource Dialog\nconst resourceDialog = ref(false)\nconst resourceForm = ref(null)\nconst resourceFormValid = ref(false)\nconst resourceData = ref({\n  url: '',\n  description: ''\n})\nconst addingResource = ref(false)\n\n// Validation rules\nconst urlRules = [\n  v => !!v || 'URL is required',\n  v => /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w.-]*)*\\/?$/.test(v) || 'Enter a valid URL'\n]\n\n// Computed\nconst exerciseId = computed(() => parseInt(route.params.id))\n\nconst exerciseCategories = computed(() => {\n  if (!exercisesStore.currentExercise || !exercisesStore.currentExercise.categoryIds) {\n    return []\n  }\n  \n  return exercisesStore.currentExercise.categoryIds\n    .map(id => categoriesStore.categoryById(id))\n    .filter(Boolean) // Filter out undefined values\n})\n\nconst exerciseTags = computed(() => {\n  if (!exercisesStore.currentExercise || !exercisesStore.currentExercise.tagIds) {\n    return []\n  }\n  \n  return exercisesStore.currentExercise.tagIds\n    .map(id => tagsStore.tagById(id))\n    .filter(Boolean) // Filter out undefined values\n})\n\nconst hasRecentSessions = computed(() => recentSessions.value.length > 0)\n\n// Methods\nfunction formatDate(dateString) {\n  return appStore.formatDate(dateString)\n}\n\nfunction formatTime(minutes) {\n  return appStore.formatMinutes(minutes)\n}\n\nfunction formatDuration(startTime, endTime) {\n  return appStore.formatDuration(startTime, endTime)\n}\n\nfunction openEditDialog() {\n  dialogVisible.value = true\n}\n\nfunction openAddResourceDialog() {\n  resourceData.value = {\n    url: '',\n    description: ''\n  }\n  resourceDialog.value = true\n}\n\nasync function saveExercise(exerciseData) {\n  try {\n    await exercisesStore.updateExercise(exerciseId.value, exerciseData, 'name,description,categoryIds,tagIds')\n    appStore.showSuccessMessage(`Exercise \"${exerciseData.name}\" updated successfully`)\n    dialogVisible.value = false\n  } catch (error) {\n    appStore.showErrorMessage(`Error updating exercise: ${error.message}`)\n  }\n}\n\nasync function saveResource() {\n  if (!resourceFormValid.value) return\n  \n  addingResource.value = true\n  try {\n    await exercisesStore.addExerciseLink(exerciseId.value, {\n      url: resourceData.value.url,\n      description: resourceData.value.description\n    })\n    \n    appStore.showSuccessMessage('Resource added successfully')\n    resourceDialog.value = false\n    \n    // Refresh the exercise data\n    await exercisesStore.fetchExercise(exerciseId.value)\n  } catch (error) {\n    appStore.showErrorMessage(`Error adding resource: ${error.message}`)\n  } finally {\n    addingResource.value = false\n  }\n}\n\nasync function startPractice() {\n  // Navigate to new session with this exercise pre-selected\n  router.push({ \n    name: 'new-session',\n    query: { exercise: exerciseId.value }\n  })\n}\n\nasync function loadStats() {\n  statsLoading.value = true\n  try {\n    const stats = await exercisesStore.fetchExerciseStats(exerciseId.value)\n    exerciseStats.value = stats\n  } catch (error) {\n    console.error('Error loading exercise stats:', error)\n    appStore.showErrorMessage('Failed to load exercise statistics')\n  } finally {\n    statsLoading.value = false\n  }\n}\n\nasync function loadRecentSessions() {\n  try {\n    // Fetch sessions that include this exercise\n    await sessionsStore.fetchSessions({ exercise_id: exerciseId.value, page_size: 5 })\n    recentSessions.value = sessionsStore.sessions\n      .filter(session => \n        session.exercises && \n        session.exercises.some(ex => ex.exerciseId === exerciseId.value)\n      )\n      .slice(0, 5) // Limit to 5 items\n  } catch (error) {\n    console.error('Error loading recent sessions:', error)\n  }\n}\n\n// Load data\nasync function loadData() {\n  loading.value = true\n  error.value = null\n  \n  try {\n    // Load exercise details\n    await exercisesStore.fetchExercise(exerciseId.value)\n    \n    // Load related data\n    if (categoriesStore.categories.length === 0) {\n      await categoriesStore.fetchCategories()\n    }\n    \n    if (tagsStore.tags.length === 0) {\n      await tagsStore.fetchTags()\n    }\n    \n    // Load exercise stats\n    await loadStats()\n    \n    // Load recent sessions\n    await loadRecentSessions()\n  } catch (err) {\n    console.error(`Error loading exercise: ${err.message}`, err)\n    error.value = `Error loading exercise: ${err.message}`\n  } finally {\n    loading.value = false\n  }\n}\n\n// Watch for route param changes to reload data\nwatch(() => route.params.id, () => {\n  loadData()\n})\n\n// Lifecycle\nonMounted(async () => {\n  await loadData()\n})\n</script>\n\n<style scoped>\n.primary--text {\n  color: rgb(var(--v-theme-primary)) !important;\n}\n</style>\n"],"names":["props","__props","emit","__emit","categoriesStore","useCategoriesStore","appStore","useAppStore","categorySelectDialog","ref","createDialogVisible","categorySearch","availableCategories","computed","filteredAvailableCategories","search","category","categoryId","truncateText","text","maxLength","isCategorySelected","openCategorySelect","openCreateDialog","toggleCategory","removeCategory","addCategory","newValue","id","createCategory","categoryData","newCategory","error","onMounted","router","useRouter","route","useRoute","exercisesStore","useExercisesStore","tagsStore","useTagsStore","sessionsStore","useSessionsStore","loading","dialogVisible","statsLoading","exerciseStats","recentSessions","resourceDialog","resourceForm","resourceFormValid","resourceData","addingResource","urlRules","v","exerciseId","exerciseCategories","exerciseTags","hasRecentSessions","formatDate","dateString","formatTime","minutes","formatDuration","startTime","endTime","openEditDialog","openAddResourceDialog","saveExercise","exerciseData","saveResource","startPractice","loadStats","stats","loadRecentSessions","session","ex","loadData","err","watch"],"mappings":"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"}